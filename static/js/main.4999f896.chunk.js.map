{"version":3,"sources":["library/tezos/operations/getSwap.js","util/index.js","components/about/style.js","components/about/index.jsx","library/ethereum/account/getAccountBalance.js","library/tezos/account/getAccountBalance.js","components/header/style.js","components/header/index.jsx","components/home/style.js","components/home/index.jsx","components/loader/style.js","components/loader/index.jsx","components/newSwap/style.js","components/newSwap/index.jsx","library/common/getConversionRate.js","library/tezos/operations/getSwaps.js","components/newSwap/ethereum/createSwap/index.jsx","components/newSwap/ethereum/getSwaps/index.jsx","components/newSwap/ethereum/index.jsx","library/ethereum/operations/getSwaps.js","components/newSwap/tezos/createSwap/index.jsx","components/newSwap/tezos/getSwaps/index.jsx","components/newSwap/tezos/index.jsx","components/setup/style.js","components/setup/index.jsx","library/ethereum/operations/getSwap.js","library/ethereum/operations/initiateWait.js","library/common/createSecrets.js","library/ethereum/operations/addCounterParty.js","library/tezos/operations/util/invokeContract.js","library/tezos/operations/redeem.js","library/ethereum/operations/refund.js","library/common/request-eth.js","library/tezos/operations/initiateWait.js","library/tezos/operations/addCounterParty.js","library/ethereum/operations/redeem.js","library/tezos/operations/refund.js","library/common/request-tezos.js","library/tezos/operations/getRedeemedSwap.js","library/common/respond-eth.js","library/ethereum/operations/getRedeemedSwap.js","library/common/respond-tezos.js","library/ethereum/account/setAccount.js","library/tezos/account/setAccount.js","App.js","serviceWorker.js","index.js","library/ethereum/operations/bc-intereraction.js"],"names":["getSwap","secretHash","a","substring","packedKey","TezosMessageUtils","encodeBigMapKey","Buffer","from","writePackedData","TezosNodeReader","getValueForBigMapKey","config","tezos","RPC","undefined","jsonData","hashedSecret","JSONPath","path","json","initiator","initiator_eth","participant","refundTimestamp","Number","Math","round","Date","getTime","state","value","exports","shorten","first","last","str","length","truncate","number","digits","trunc","pow","useStyles","makeStyles","theme","container","width","margin","fontSize","lineHeight","marginBottom","list","textAlign","About","classes","className","accountBalanceEth","web3","address","eth","getBalance","balance","accountBalanceTez","getSpendableBalanceForAccount","result","header","display","padding","justifyContent","account","border","borderRadius","height","marginTop","button","color","cursor","outline","fontWeight","backgroundColor","title","fontFamily","nav","Header","ethStore","tezStore","balUpdate","useState","tez","setBalance","history","useHistory","updateBalance","keyStore","publicKeyHash","useEffect","timer","setInterval","clearInterval","onClick","push","background","swaps","swap","noSwap","Home","data","Object","keys","map","key","exp","refundTime","toLocaleString","1","2","3","4","SwapItem","loader","msg","alignItems","flexDirection","Loader","message","CircularProgress","size","select","selectButton","expectedValue","create","valueInput","swapScreen","flexGrow","overflowY","or","newSwap","createWrap","maxHeight","Swap","getConvertionRate","tezosNode","chain_id","xtzPrice","ethPrice","parseValue","michelsonData","michelineData","TezosLanguageUtil","translateMichelsonToMicheline","JSON","parse","readAddress","getSwaps","ConseilDataClient","executeEntityQuery","conseilServer","network","fields","predicates","field","operation","ConseilOperator","EQ","set","inverse","ISNULL","orderBy","direction","ConseilSortDirection","DESC","aggregation","limit","forEach","e","CreateSwap","genSwap","rate","setRate","input","setInput","getConversionRate","then","res","console","log","rt","generateSwap","preventDefault","target","alert","onSubmit","type","placeholder","name","step","min","onInput","GetSwap","selfAcc","setSwaps","setLoader","fullLoader","setFullLoader","filterSwaps","swps","swp","now","displayValue","pay","Ethereum","props","store","contract","methods","getAllSwaps","call","dispValue","Tezos","form","submit","intro","Setup","init","initWait","secret","tezAcc","amtInEther","initiateWait","encodeABI","BCInteract","rc","createSecrets","rand","crypto","randomBytes","hash","createHash","update","digest","toString","addCoutnerParty","ethAccount","addCounterParty","invokeContract","amtInMuTez","entry_point","parameters","extraGas","extraStorage","Promise","resolve","reject","TezosNodeWriter","testContractInvocationOperation","contractAddr","TezosParameterFormat","Michelson","gas","freight","storageCost","sendContractInvocationOperation","signer","groupid","replace","TezosConseilClient","awaitOperationConfirmation","catch","err","status","redeem","refund","waitCompletion","tid","getSwapTez","requestEth","amount","getSwapEth","stringify","ethAddress","amtMuTez","time","tezAccount","requestTezos","initiator_tez","splt","split","getRedeemedSecret","i","id","respondEth","req_swap","getPastEvents","filter","_hashedSecret","fromBlock","toBlock","returnValues","respondTezos","setEthAccount","Web3","providers","HttpProvider","ethereum","accounts","privateKeyToAccount","privateKey","Contract","abi","setTezAccount","tezSetup","KeyStoreUtils","restoreIdentityFromSecretKey","SoftSigner","createSigner","writeKeyWithHint","App","ethSetup","updateSwaps","React","updateState","swapRef","useRef","current","ethRef","tezRef","forceUpdate","useCallback","initialize","ethKey","tezKey","newSwaps","basename","process","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","interact","ether","to","chain","getBlock","_gasLimit","gasLimit","getGasPrice","_gasPrice","_hex_gasLimit","utils","toHex","_hex_gasPrice","_hex_Gas","getTransactionCount","nonce","rawTx","gasPrice","toWei","tx","Transaction","sign","serializedTx","serialize","sendSignedTransaction","on","transactionHash","contractAddress"],"mappings":"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","file":"static/js/main.4999f896.chunk.js","sourcesContent":["import { TezosNodeReader, TezosMessageUtils } from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\nimport { JSONPath } from \"jsonpath-plus\";\n\nconst getSwap = async (secretHash) => {\n  secretHash = secretHash.substring(2);\n  const packedKey = TezosMessageUtils.encodeBigMapKey(\n    Buffer.from(TezosMessageUtils.writePackedData(secretHash, \"bytes\"), \"hex\")\n  );\n  const jsonData = await TezosNodeReader.getValueForBigMapKey(\n    config.tezos.RPC,\n    15534,\n    packedKey\n  );\n  if (jsonData === undefined) return jsonData;\n  return {\n    hashedSecret:\n      \"0x\" +\n      JSONPath({\n        path: \"$.args[0].args[0].bytes\",\n        json: jsonData,\n      })[0],\n    initiator: JSONPath({\n      path: \"$.args[0].args[1].args[0].string\",\n      json: jsonData,\n    })[0],\n    initiator_eth: JSONPath({\n      path: \"$.args[0].args[1].args[1].string\",\n      json: jsonData,\n    })[0],\n    participant: JSONPath({\n      path: \"$.args[1].args[0].args[0].string\",\n      json: jsonData,\n    })[0],\n    refundTimestamp: Number(\n      Math.round(\n        new Date(\n          JSONPath({\n            path: \"$.args[1].args[0].args[1].string\",\n            json: jsonData,\n          })[0]\n        ).getTime() / 1000\n      )\n    ),\n    state: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[0].int\", json: jsonData })[0]\n    ),\n    value: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[1].int\", json: jsonData })[0]\n    ),\n  };\n};\n\nexport default getSwap;\n","exports.shorten = (first, last, str) => {\n  return str.substring(0, first) + \"...\" + str.substring(str.length - last);\n};\n\nexports.truncate = (number, digits) => {\n  return Math.trunc(number * Math.pow(10, digits)) / Math.pow(10, digits);\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"70%\",\n    margin: \"-2vw auto\",\n    fontSize: \"1.4vw\",\n    lineHeight: \"2.8vw\",\n    marginBottom: \"2.8vw\",\n  },\n  list: { textAlign: \"left\", width: \"fit-content\", margin: \"0 auto\" },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./style\";\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <p>\n        <h2>What are Atomic Swaps?</h2>\n        Atomic swaps are automated, self-enforcing crypto-currency exchange\n        contracts\n        <br />\n        that allow crypto-currencies to be traded peer-to-peer without the need\n        for a trusted third party.\n        <br />\n        <h2>Why TrueSwap?</h2>\n        The goal of atomic swaps was to remove any need for centralized 3rd\n        parties, but most exchanges that provide \"Decentralized\" Atomic Swaps\n        have some form of centralized backend service which is being used for\n        either order book maintenance, order matching or both. <br />\n        <b>TrueSwap</b> provides complete Decentralized Atomic Swaps, it is not\n        dependant on any centralized third-party service.\n        <br />\n        All stages of a swap are performed by the client application(this\n        website), hence it is mandatory for the client to be active throughout\n        the swap. If the app is disconnected or closed before a swap is\n        completed or refunded the data will be lost and your swap assets will\n        not be recoverable.\n        <br />\n        <h2>How to Perform a Swap?</h2>\n        Currently TrueSwap provides cross chain atomic swaps between Ethereum\n        and Tezos, to start a swap follow these steps :\n        <p className={classes.list}>\n          1. Visit the <b>New Swap</b> option from the navigation. <br />\n          2. Select which crypto-currency you want to swap(ETH-{\">\"}XTZ or XTZ-\n          {\">\"}ETH). <br />\n          3. In the following screen you can either create an new swap by\n          entering the amount you want\n          <br />\n          to exchange on the left side or select from the existing swaps on the\n          right. <br />\n          4. Once a swap is generated you can see the Swap state in the{\" \"}\n          <b>Home</b> page.\n        </p>\n        <br />\n        The swap can can be in the following states :<br />\n      </p>\n      <p className={classes.list}>\n        1. Swap Initiated : Swap Request initiated, waiting for response Swaps.\n        <br /> 2. Swap Response Found : Swap response has been found and can proceed to\n        completion. <br />\n        3. Completed : The Swap was successfully completed. <br />\n        4. Refunded : There was no Response for the Swap, it expired and the\n        funds have been returned.\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","const accountBalanceEth = async (web3, address) => {\n  const balance = await web3.eth.getBalance(address); //Will give value in.\n  return balance;\n};\n\nexport default accountBalanceEth;\n","import { TezosNodeReader } from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\n\nconst accountBalanceTez = async (address) => {\n  const result = await TezosNodeReader.getSpendableBalanceForAccount(\n    config.tezos.RPC,\n    address\n  );\n  return result;\n};\n\nexport default accountBalanceTez;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    padding: \"1.5vw\",\n    fontSize: \"1.5vw\",\n    justifyContent: \"space-between\",\n    marginBottom: \"1vw\",\n  },\n  account: {\n    padding: \"0.6vw\",\n    border: \"0.2vw black solid\",\n    borderRadius: \"2vw\",\n    height: \"fit-content\",\n    width: \"28vw\",\n    marginTop: \"1vw\",\n  },\n  button: {\n    color: \"white\",\n    border: \"0.2vw black solid\",\n    cursor: \"pointer\",\n    margin: \"1.5vw 1vw\",\n    outline: \"none\",\n    padding: \"0.4vw 0.2vw\",\n    fontSize: \"1.2vw\",\n    fontWeight: \"bold\",\n    borderRadius: \"0.5vw\",\n    backgroundColor: \"black\",\n    width: \"10vw\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  title: {\n    fontFamily: \"'Pacifico', cursive\",\n    fontSize: \"5vw\",\n    margin: \"0\",\n    lineHeight: \"6vw\",\n  },\n  nav: {},\n}));\n\nexport default useStyles;\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport accountBalanceEth from \"../../library/ethereum/account/getAccountBalance\";\nimport accountBalanceTez from \"../../library/tezos/account/getAccountBalance\";\nimport useStyles from \"./style\";\nimport { useHistory } from \"react-router-dom\";\nimport { shorten, truncate } from \"../../util\";\n\nconst Header = ({ ethStore, tezStore, balUpdate }) => {\n  const [balance, setBalance] = useState({ eth: 0, tez: 0 });\n  const classes = useStyles();\n  const history = useHistory();\n  const updateBalance = async () => {\n    let eth = await accountBalanceEth(ethStore.web3, ethStore.keyStore.address);\n    let tez = await accountBalanceTez(tezStore.keyStore.publicKeyHash);\n    eth = eth / Math.pow(10, 18);\n    tez = tez / 1000000;\n    balUpdate({ eth, tez });\n    setBalance({ eth, tez });\n  };\n\n  useEffect(() => {\n    updateBalance();\n    const timer = setInterval(async () => {\n      await updateBalance();\n    }, 60000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [ethStore.keyStore.address, tezStore.keyStore.publicKeyHash]);\n\n  return (\n    <div className={classes.header}>\n      <div className={classes.account}>\n        <p>Ethereum Addr.: {shorten(5, 5, ethStore.keyStore.address)}</p>\n        <p>Balance : {truncate(balance.eth, 4)} ETH</p>\n      </div>\n      <div className={classes.nav}>\n        <h1 className={classes.title}>TrueSwap</h1>\n        <button className={classes.button} onClick={() => history.push(\"/\")}>\n          Home\n        </button>\n        <button\n          className={classes.button}\n          onClick={() => history.push(\"/about\")}\n        >\n          About\n        </button>\n        <button\n          className={classes.button}\n          onClick={() => history.push(\"/create\")}\n        >\n          New Swap\n        </button>\n      </div>\n      <div className={classes.account}>\n        <p>Tezos Addr.: {shorten(5, 5, tezStore.keyStore.publicKeyHash)}</p>\n        <p>Balance : {truncate(balance.tez, 4)} XTZ</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"white\",\n    cursor: \"pointer\",\n    padding: \"0.4vw\",\n    background: \"black\",\n    fontWeight: \"bold\",\n    borderRadius: \"0.4vw\",\n    fontSize: \"1.2vw\",\n    outline: \"none\",\n    border: \"0.2vw black solid\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  swaps: {\n    margin: \"1.4vw\",\n    \"& h3\": {\n      fontSize: \"2.1vw\",\n    },\n  },\n  swap: {\n    color: \"white\",\n    width: \"fit-content\",\n    border: \"0.2vw black solid\",\n    margin: \"3vw auto\",\n    padding: \"0.5vw 2vw\",\n    lineHeight: \"1.7vw\",\n    borderRadius: \"2vw\",\n    backgroundColor: \"black\",\n  },\n  noSwap: {\n    fontSize: \"1.2vw\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"./style\";\n\nconst Home = ({ swaps }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const SwapItem = (data) => {\n    const exp = new Date(data.refundTime * 1000);\n    const state = {\n      1: \"Swap Initiated\",\n      2: \"Swap Response Found\",\n      3: \"Completed\",\n      4: \"Refunded\",\n    };\n    return (\n      <div className={classes.swap} key={data.hashedSecret}>\n        <p>Hash : {data.hashedSecret}</p>\n        <p>Value : {data.value}</p>\n        <p>Expiry Time : {exp.toLocaleString()}</p>\n        <p>State : {state[data.state]}</p>\n      </div>\n    );\n  };\n  let data = (\n    <div className={classes.noSwap}>\n      <p>\n        No Swaps Created Yet! Learn more about <b>TrueSwap</b> and how to create\n        your own Atomic Swap\n      </p>\n      <button className={classes.button} onClick={() => history.push(\"/about\")}>\n        Learn More\n      </button>\n      <p>or create a Swap now!</p>\n      <button\n        className={classes.button}\n        onClick={() => history.push(\"/create\")}\n      >\n        Start New Swap\n      </button>\n    </div>\n  );\n  if (swaps !== undefined)\n    data = Object.keys(swaps).map((key) => SwapItem(swaps[key]));\n  return (\n    <div>\n      <div className={classes.swaps}>\n        <h3>Your Swaps</h3>\n        {data}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  loader: {\n    color: \"black\",\n    fontSize: \"2vw\",\n  },\n  msg: { margin: \"2vw\", fontSize: \"1.5vw\" },\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useStyles from \"./style\";\n\nconst Loader = ({ message }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.loader} size={60} />\n      <p className={classes.msg}>{message}</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"90%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"center\",\n  },\n  selectButton: {\n    margin: \"1.5vw\",\n    padding: \"4vw\",\n    backgroundColor: \"black\",\n    borderRadius: \"0.6vw\",\n    color: \"white\",\n    fontSize: \"2.5vw\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\",\n    border: \"0.2vw solid black\",\n    width: \"100%\",\n    outline: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  expectedValue: {\n    display: \"block\",\n    marginTop: \"2vw\",\n  },\n  create: {\n    backgroundColor: \"black\",\n    borderRadius: \"0.5vw\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    padding: \"0.4vw 1vw\",\n    cursor: \"pointer\",\n    outline: \"none\",\n    border: \"0.2vw black solid\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  valueInput: {\n    padding: \"0.7vw\",\n    margin: \"1vw auto\",\n    display: \"block\",\n    width: \"17vw\",\n    height: \"1.4vw\",\n    fontSize: \"1vw\",\n  },\n  swap: {\n    color: \"white\",\n    border: \"0.2vw black solid\",\n    cursor: \"pointer\",\n    margin: \"0 1.4vw 1.4vw 1.4vw\",\n    outline: \"none\",\n    padding: \"0.7vw\",\n    lineHeight: \"1vw\",\n    borderRadius: \"1vw\",\n    backgroundColor: \"black\",\n    fontSize: \"1.5vw\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  msg: {\n    margin: \"1.4vw 1vw\",\n    fontSize: \"1.7vw\",\n  },\n  swapScreen: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100%\",\n  },\n  swaps: {\n    flexGrow: 1,\n    overflowY: \"auto\",\n  },\n  or: {\n    display: \"flex\",\n    flexGrow: \"1\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    fontSize: \"2.5vw\",\n    background: \"linear-gradient(#000, #000) no-repeat center/2px 100%\",\n    \"& p\": {\n      background: \"white\",\n    },\n  },\n  newSwap: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n  },\n  createWrap: {\n    width: \"28vw\",\n    padding: \"2vw\",\n    border: \"0.3vw solid black\",\n    borderRadius: \"1vw\",\n  },\n  container: {\n    width: \"45%\",\n    maxHeight: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"./style\";\n\nconst Swap = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  return (\n    <div className={classes.select}>\n      <button\n        className={classes.selectButton}\n        onClick={() => history.push(\"/create/xtz\")}\n      >\n        XTZ &#8614; ETH\n      </button>\n      <button\n        className={classes.selectButton}\n        onClick={() => history.push(\"/create/eth\")}\n      >\n        ETH &#8614; XTZ\n      </button>\n    </div>\n  );\n};\n\nexport default Swap;\n","import { TezosNodeReader } from \"conseiljs\";\nimport config from \"../../globalConfig.json\";\nimport { JSONPath } from \"jsonpath-plus\";\n\nconst getConvertionRate = async () => {\n  let data = await TezosNodeReader.getValueForBigMapKey(\n    config.tezos.tezosNode,\n    14981,\n    \"exprukkbxD4rqiYFhFNSkLHfyEfbVEMirvDS9naHRjGKbzPsREJfmc\",\n    undefined,\n    config.tezos.chain_id\n  );\n  const xtzPrice = Number(\n    JSONPath({ path: \"$.args[0].args[0].int\", json: data })[0]\n  );\n  data = await TezosNodeReader.getValueForBigMapKey(\n    config.tezos.tezosNode,\n    14981,\n    \"exprv9NLX1skZHFM1i6eXc7eAazz25T1BVjkDzc47fWEEjn6y2Zsay\",\n    undefined,\n    config.tezos.chain_id\n  );\n  const ethPrice = Number(\n    JSONPath({ path: \"$.args[0].args[0].int\", json: data })[0]\n  );\n  return ethPrice / xtzPrice;\n};\n\nexport default getConvertionRate;\n","import {\n  ConseilDataClient,\n  ConseilOperator,\n  ConseilSortDirection,\n  TezosLanguageUtil,\n  TezosMessageUtils,\n} from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\nimport { JSONPath } from \"jsonpath-plus\";\n\nconst parseValue = (michelsonData) => {\n  const michelineData = TezosLanguageUtil.translateMichelsonToMicheline(\n    michelsonData\n  );\n  const jsonData = JSON.parse(michelineData);\n\n  return {\n    hashedSecret:\n      \"0x\" +\n      JSONPath({\n        path: \"$.args[0].args[0].bytes\",\n        json: jsonData,\n      })[0],\n    initiator: TezosMessageUtils.readAddress(\n      JSONPath({ path: \"$.args[0].args[1].args[0].bytes\", json: jsonData })[0]\n    ),\n    initiator_eth: JSONPath({\n      path: \"$.args[0].args[1].args[1].string\",\n      json: jsonData,\n    })[0],\n    participant: TezosMessageUtils.readAddress(\n      JSONPath({ path: \"$.args[1].args[0].args[0].bytes\", json: jsonData })[0]\n    ),\n    refundTimestamp: Number(\n      JSONPath({ path: \"$.args[1].args[0].args[1].int\", json: jsonData })[0]\n    ),\n    state: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[0].int\", json: jsonData })[0]\n    ),\n    value: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[1].int\", json: jsonData })[0]\n    ),\n  };\n};\n\nconst getSwaps = async () => {\n  const data = await ConseilDataClient.executeEntityQuery(\n    config.tezos.conseilServer,\n    \"tezos\",\n    config.tezos.network,\n    \"big_map_contents\",\n    {\n      fields: [\"key\", \"key_hash\", \"operation_group_id\", \"big_map_id\", \"value\"],\n      predicates: [\n        {\n          field: \"big_map_id\",\n          operation: ConseilOperator.EQ,\n          set: [\"15534\"],\n          inverse: false,\n        },\n        {\n          field: \"value\",\n          operation: ConseilOperator.ISNULL,\n          set: [\"\"],\n          inverse: true,\n        },\n      ],\n      orderBy: [{ field: \"key\", direction: ConseilSortDirection.DESC }],\n      aggregation: [],\n      limit: 1000,\n    }\n  );\n  let swaps = [];\n  data.forEach((e) => {\n    if (e.value !== null) swaps.push(parseValue(e.value));\n  });\n  return swaps;\n};\n\nexport default getSwaps;\n","import React, { useEffect, useState } from \"react\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"../../style\";\n\nconst CreateSwap = ({ className, genSwap, loader, balance }) => {\n  const [rate, setRate] = useState(0);\n  const [input, setInput] = useState(0);\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      setRate(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      setRate(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const generateSwap = async (e) => {\n    e.preventDefault();\n    if (e.target.eth.value === \"\" || e.target.eth.value === 0) return;\n    loader(true);\n    const res = await genSwap(1, e.target.eth.value);\n    loader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <div className={className}>\n      <div className={classes.createWrap}>\n        <form onSubmit={generateSwap}>\n          <input\n            type=\"number\"\n            placeholder=\"Amount in ETH\"\n            name=\"eth\"\n            step=\".0001\"\n            min=\"0\"\n            onInput={(e) => setInput(e.target.value)}\n            className={classes.valueInput}\n          />\n          <input className={classes.create} type=\"submit\" value=\"CREATE\" />\n        </form>\n        <p className={classes.expectedValue}>\n          Expected XTZ Value : {input * rate} XTZ\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateSwap;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport getSwaps from \"../../../../library/tezos/operations/getSwaps\";\nimport { shorten } from \"../../../../util\";\nimport Loader from \"../../../loader\";\nimport useStyles from \"../../style\";\nimport CreateSwap from \"../createSwap\";\n\nconst GetSwap = ({ genSwap, selfAcc, balance }) => {\n  const [swaps, setSwaps] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [fullLoader, setFullLoader] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const filterSwaps = async (rt) => {\n    const data = await getSwaps();\n    let swps = [];\n    data.forEach((swp) => {\n      if (\n        swp.participant === swp.initiator &&\n        swp.initiator !== selfAcc &&\n        Math.trunc(Date.now() / 1000) < swp.refundTimestamp - 4200\n      )\n        swps.push({\n          ...swp,\n          displayValue: swp.value / 1000000,\n          pay: swp.value / (rt * 1000000),\n        });\n    });\n    setSwaps(swps);\n    setLoader(false);\n  };\n\n  const SwapItem = (data) => {\n    return (\n      <div\n        onClick={() => {\n          generateSwap(data.pay, data);\n        }}\n        key={data.hashedSecret}\n        className={classes.swap}\n      >\n        <p>Hash : {shorten(15, 15, data.hashedSecret)}</p>\n        <p>XTZ Value : {data.displayValue}</p>\n        <p>ETH to Pay : {data.pay}</p>\n      </div>\n    );\n  };\n\n  const generateSwap = async (value, data) => {\n    setFullLoader(true);\n    const res = await genSwap(2, value, data);\n    setFullLoader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      filterSwaps(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      filterSwaps(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  let data = \"No Swaps Found. Create One!\";\n  if (swaps.length > 0) data = swaps.map((swp) => SwapItem(swp));\n  if (fullLoader) return <Loader message=\"..Creating Your Swap..\" />;\n  return (\n    <div className={classes.swapScreen}>\n      <div className={classes.container}>\n        <h3 className={classes.msg}>Create New Swap</h3>\n        <CreateSwap\n          className={classes.newSwap}\n          genSwap={genSwap}\n          balance={balance}\n          loader={setFullLoader}\n        />\n      </div>\n      <div className={classes.or}>\n        <p>Or</p>\n      </div>\n      <div className={classes.container}>\n        <h3 className={classes.msg}>Select From Available SWAPS</h3>\n        <div className={classes.swaps}>\n          {loader && <Loader message=\"..Loading Swaps..\" />}\n          {!loader && data}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GetSwap;\n","import React from \"react\";\nimport GetSwap from \"./getSwaps\";\n\nconst Ethereum = (props) => {\n  return <GetSwap {...props} />;\n};\n\nexport default Ethereum;\n","const getSwaps = async (store) => {\n  const swaps = await store.contract.methods.getAllSwaps().call();\n  return swaps;\n};\n\nexport default getSwaps;\n","import React, { useEffect, useState } from \"react\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"../../style\";\n\nconst CreateSwap = ({ className, genSwap, loader, balance }) => {\n  const [rate, setRate] = useState(0);\n  const [input, setInput] = useState(0);\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      setRate(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      setRate(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const generateSwap = async (e) => {\n    e.preventDefault();\n    if (e.target.tez.value === \"\" || e.target.tez.value === 0) return;\n    loader(true);\n    const res = await genSwap(2, e.target.tez.value);\n    loader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <div className={className}>\n      <div className={classes.createWrap}>\n        <form onSubmit={generateSwap}>\n          <input\n            type=\"number\"\n            placeholder=\"Amount in XTZ\"\n            name=\"tez\"\n            step=\".0001\"\n            min=\"0\"\n            onInput={(e) => setInput(e.target.value)}\n            className={classes.valueInput}\n          />\n          <input className={classes.create} type=\"submit\" value=\"CREATE\" />\n        </form>\n        <p className={classes.expectedValue}>\n          Expected ETH Value : {input / rate} ETH\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateSwap;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport getSwaps from \"../../../../library/ethereum/operations/getSwaps\";\nimport { shorten } from \"../../../../util\";\nimport Loader from \"../../../loader\";\nimport useStyles from \"../../style\";\nimport CreateSwap from \"../createSwap\";\n\nconst GetSwap = ({ genSwap, ethStore, balance }) => {\n  const [swaps, setSwaps] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [fullLoader, setFullLoader] = useState(false);\n\n  const history = useHistory();\n  const classes = useStyles();\n  const filterSwaps = async (rt) => {\n    const data = await getSwaps(ethStore);\n    let swps = [];\n    data.forEach((swp) => {\n      if (\n        swp.participant === swp.initiator &&\n        swp.initiator !== ethStore.keyStore.address &&\n        Math.trunc(Date.now() / 1000) < swp.refundTimestamp - 4200\n      )\n        swps.push({\n          ...swp,\n          dispValue: swp.value / Math.pow(10, 18),\n          pay: (swp.value * rt) / Math.pow(10, 18),\n        });\n    });\n    setSwaps(swps);\n    setLoader(false);\n  };\n\n  const SwapItem = (data) => {\n    return (\n      <div\n        onClick={() => {\n          generateSwap(data.pay, data);\n        }}\n        key={data.hashedSecret}\n        className={classes.swap}\n      >\n        <p>Hash : {shorten(15, 15, data.hashedSecret)}</p>\n        <p>ETH Value : {data.dispValue}</p>\n        <p>XTZ to Pay : {data.pay}</p>\n      </div>\n    );\n  };\n\n  const generateSwap = async (value, data) => {\n    setFullLoader(true);\n    const res = await genSwap(1, value, data);\n    setFullLoader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      filterSwaps(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      filterSwaps(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  let data = \"No Swaps Found. Create One!\";\n  if (swaps.length > 0) data = swaps.map((swp) => SwapItem(swp));\n  if (fullLoader) return <Loader message=\"..Creating Your Swap..\" />;\n  return (\n    <div className={classes.swapScreen}>\n      <div className={classes.container}>\n        <h3 className={classes.msg}>Create New Swap</h3>\n        <CreateSwap\n          className={classes.newSwap}\n          genSwap={genSwap}\n          balance={balance}\n          loader={setFullLoader}\n        />\n      </div>\n      <div className={classes.or}>\n        <p>Or</p>\n      </div>\n      <div className={classes.container}>\n        <h3 className={classes.msg}>Select From Available SWAPS</h3>\n        <div className={classes.swaps}>\n          {loader && <Loader message=\"..Loading Swaps..\" />}\n          {!loader && data}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GetSwap;\n","import React from \"react\";\nimport GetSwap from \"./getSwaps\";\n\nconst Tezos = (props) => {\n  return <GetSwap {...props} />;\n};\n\nexport default Tezos;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"31%\",\n    margin: \"0 auto\",\n    padding: \"2vw 3vw 1vw 3vw\",\n    border: \"0.3vw black solid\",\n    borderRadius: \"1vw\",\n  },\n  input: { margin: \"1vw\", fontSize: \"1.2vw\" },\n  submit: {\n    color: \"white\",\n    width: \"fit-content\",\n    margin: \"1vw auto\",\n    padding: \"0.5vw\",\n    fontWeight: \"bold\",\n    borderRadius: \"0.3vw\",\n    backgroundColor: \"black\",\n    cursor: \"pointer\",\n    fontSize: \"1.2vw\",\n    outline: \"none\",\n    border: \"0.2vw black solid\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  intro: {\n    margin: \"5vw\",\n    fontSize: \"1.5vw\",\n  },\n  title: {\n    fontFamily: \"'Pacifico', cursive\",\n    fontSize: \"5vw\",\n    margin: \"0\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./style\";\nconst Setup = ({ init }) => {\n  const setup = (e) => {\n    e.preventDefault();\n    if (e.target.eth.value !== \"\" && e.target.tez.value !== \"\")\n      init(e.target.eth.value, e.target.tez.value);\n  };\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.intro}>\n        <h1 className={classes.title}>TrueSwap</h1>\n        <p>Truly Decentralized Cross-Chain Atomic Swaps for Ethereum and Tezos</p>\n        <p>\n          *Do not refresh or close the app during a running swap, your swaps\n          will be lost\n        </p>\n      </div>\n      <form className={classes.form} onSubmit={setup}>\n        <input\n          className={classes.input}\n          type=\"password\"\n          placeholder=\"ethereum private key [goerli-testnet]\"\n          name=\"eth\"\n        />\n        <input\n          className={classes.input}\n          type=\"password\"\n          placeholder=\"tezos private key [carthagenet]\"\n          name=\"tez\"\n        />\n        <input className={classes.submit} type=\"submit\" value=\"START\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Setup;\n","const getSwap = async (store, secretHash) => {\n  const swap = await store.contract.methods.swaps(secretHash).call();\n  return swap;\n};\n\nexport default getSwap;\n","import BCInteract from \"./bc-intereraction\";\n\nconst initWait = async (\n  web3,\n  store,\n  secret,\n  refundTime,\n  tezAcc,\n  amtInEther\n) => {\n  const data = await store.contract.methods\n    .initiateWait(secret, tezAcc, refundTime)\n    .encodeABI();\n  const rc = await BCInteract(web3, store, data, amtInEther, \"1000000\");\n  return rc;\n};\n\nexport default initWait;\n","import crypto from \"crypto\";\n\nconst createSecrets = () => {\n  const rand = crypto.randomBytes(32);\n  let hash = crypto.createHash(\"sha256\").update(rand).digest();\n  hash = crypto.createHash(\"sha256\").update(hash).digest(\"hex\");\n  return {\n    hashedSecret: \"0x\" + hash,\n    secret: \"0x\" + rand.toString(\"hex\"),\n  };\n};\n\nexport default createSecrets;\n","import BCInteract from \"./bc-intereraction\";\n\nconst addCoutnerParty = async (web3, store, secret, ethAccount) => {\n  const data = await store.contract.methods\n    .addCounterParty(secret, ethAccount)\n    .encodeABI();\n  const rc = await BCInteract(web3, store, data, \"0\", \"1000000\");\n  return rc;\n};\n\nexport default addCoutnerParty;\n","import {\n  TezosConseilClient,\n  TezosNodeWriter,\n  TezosParameterFormat\n} from \"conseiljs\";\nimport config from \"../../../../globalConfig.json\";\n\nconst invokeContract = (\n  store,\n  amtInMuTez,\n  entry_point,\n  parameters,\n  extraGas = 300,\n  extraStorage = 50\n) => {\n  return new Promise((resolve, reject) => {\n    const fee = 105000,\n      storage_limit = 6000,\n      gas_limit = 1000000;\n    TezosNodeWriter.testContractInvocationOperation(\n      config.tezos.RPC,\n      config.tezos.chain_id,\n      store.keyStore,\n      config.tezos.contractAddr,\n      amtInMuTez,\n      fee,\n      storage_limit,\n      gas_limit,\n      entry_point,\n      parameters,\n      TezosParameterFormat.Michelson\n    )\n      .then(({ gas, storageCost: freight }) => {\n        console.log(gas + extraGas, freight, ~~((gas + extraGas) / 10 + 300));\n        return TezosNodeWriter.sendContractInvocationOperation(\n          config.tezos.RPC,\n          store.signer,\n          store.keyStore,\n          config.tezos.contractAddr,\n          amtInMuTez,\n          200000,\n          freight + extraStorage,\n          gas + extraGas,\n          entry_point,\n          parameters,\n          TezosParameterFormat.Michelson\n        );\n      })\n      .then((result) => {\n        const groupid = result[\"operationGroupID\"]\n          .replace(/\"/g, \"\")\n          .replace(/\\n/, \"\"); // clean up RPC output\n        return TezosConseilClient.awaitOperationConfirmation(\n          config.tezos.conseilServer,\n          config.tezos.network,\n          groupid,\n          1\n        );\n      })\n      .then(resolve)\n      .catch((err) => {\n        console.log(err);\n        resolve({ status: \"error\" });\n      });\n  });\n};\n\nexport default invokeContract;\n","import invokeContract from \"./util/invokeContract\";\n\nconst redeem = async (store, hashedSecret, secret) => {\n  const res = await invokeContract(\n    store,\n    0,\n    \"redeem\",\n    `(Pair ${hashedSecret} ${secret})`,\n    100000,\n    300\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default redeem;\n","import BCInteract from \"./bc-intereraction\";\n\nconst refund = async (web3, store, secret) => {\n  const data = await store.contract.methods.refund(secret).encodeABI();\n  const rc = await BCInteract(web3, store, data, \"0\", \"1000000\");\n  return rc;\n};\n\nexport default refund;\n","import getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport initWait from \"../ethereum/operations/initiateWait\";\nimport createSecrets from \"./createSecrets\";\nimport addCounterParty from \"../ethereum/operations/addCounterParty\";\nimport redeem from \"../tezos/operations/redeem\";\nimport refund from \"../ethereum/operations/refund\";\n\nconst waitCompletion = (secret, tezStore, ethStore, refundTime, update) => {\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(ethStore.web3, ethStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapTez(secret.hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp.participant !== tezStore.keyStore.publicKeyHash) return;\n    clearInterval(tid);\n    console.log(\"\\nCOMPLETING SWAP\");\n    await redeem(tezStore, secret.hashedSecret, secret.secret);\n    update(secret.hashedSecret, 3);\n  }, 180000);\n};\n\nconst requestEth = async (amount, ethStore, tezStore, update) => {\n  // generate swap secret\n  const secret = createSecrets();\n  console.log(\"Your SWAP Secret (XTZ->ETH): \", secret);\n\n  // create new swap with refund time set to 2hrs\n  const refundTime = Math.trunc(Date.now() / 1000) + 7200;\n  const status = await initWait(\n    ethStore.web3,\n    ethStore,\n    secret.hashedSecret,\n    refundTime,\n    tezStore.keyStore.publicKeyHash,\n    amount + \"\"\n  );\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP Generated : \");\n  const swap = await getSwapEth(ethStore, secret.hashedSecret);\n  console.log(JSON.stringify(swap));\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(ethStore.web3, ethStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapTez(secret.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp === undefined) return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(\n      ethStore.web3,\n      ethStore,\n      secret.hashedSecret,\n      swp.initiator_eth\n    );\n    update(secret.hashedSecret, 2);\n    waitCompletion(secret, tezStore, ethStore, refundTime, update);\n  }, 180000);\n\n  return {\n    hashedSecret: secret.hashedSecret,\n    value: amount + \" ETH\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default requestEth;\n","import invokeContract from \"./util/invokeContract\";\n\nconst initWait = async (store, ethAddress, amtMuTez, hashedSecret, time) => {\n  const res = await invokeContract(\n    store,\n    amtMuTez,\n    \"initiateWait\",\n    `(Pair ${hashedSecret} (Pair \"${time}\" \"${ethAddress}\"))`,\n    10000,\n    300\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default initWait;\n","import invokeContract from \"./util/invokeContract\";\n\nconst addCounterParty = async (store, tezAccount, hashedSecret) => {\n  const res = await invokeContract(\n    store,\n    0,\n    \"addCounterParty\",\n    `(Pair ${hashedSecret} \"${tezAccount}\")`,\n    100000\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default addCounterParty;\n","import BCInteract from \"./bc-intereraction\";\n\nconst redeem = async (web3, store, secretHash, secret) => {\n  const data = await store.contract.methods\n    .redeem(secretHash, secret)\n    .encodeABI();\n  const rc = await BCInteract(web3, store, data, \"0\", \"1000000\");\n  return rc;\n};\n\nexport default redeem;\n","import invokeContract from \"./util/invokeContract\";\n\nconst refund = async (store, hashedSecret) => {\n  const res = await invokeContract(\n    store,\n    0,\n    \"refund\",\n    `${hashedSecret}`,\n    100000\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default refund;\n","import getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport initWait from \"../tezos/operations/initiateWait\";\nimport createSecrets from \"./createSecrets\";\nimport addCounterParty from \"../tezos/operations/addCounterParty\";\nimport redeem from \"../ethereum/operations/redeem\";\nimport refund from \"../tezos/operations/refund\";\n\nconst waitCompletion = (secret, tezStore, ethStore, refundTime, update) => {\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(tezStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapEth(ethStore, secret.hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp.participant !== ethStore.keyStore.address) return;\n    clearInterval(tid);\n    console.log(\"\\nCOMPLETING SWAP\");\n    await redeem(ethStore.web3, ethStore, secret.hashedSecret, secret.secret);\n    update(secret.hashedSecret, 3);\n  }, 180000);\n};\n\nconst requestTezos = async (amount, ethStore, tezStore, update) => {\n  // generate swap secret\n  const secret = createSecrets();\n  console.log(\"Your SWAP Secret (XTZ->ETH): \", secret);\n\n  // create new swap with refund time set to 2hrs\n  const refundTime = Math.trunc(Date.now() / 1000) + 7200;\n  const status = await initWait(\n    tezStore,\n    ethStore.keyStore.address,\n    amount * 1000000 + \"\",\n    secret.hashedSecret,\n    refundTime\n  );\n\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP Generated : \");\n  const swap = await getSwapTez(secret.hashedSecret);\n  console.log(JSON.stringify(swap));\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(tezStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapEth(ethStore, secret.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp.initiator_tez === \"\" && swp.refundTimestamp === \"0\") return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(tezStore, swp.initiator_tez, secret.hashedSecret);\n    update(secret.hashedSecret, 2);\n    waitCompletion(secret, tezStore, ethStore, refundTime, update);\n  }, 180000);\n\n  return {\n    hashedSecret: secret.hashedSecret,\n    value: amount + \" XTZ\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default requestTezos;\n","import { ConseilDataClient } from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\n\nconst parseValue = (e) => {\n  const splt = e.parameters.split(\" \");\n  return {\n    ...e,\n    parameters: {\n      hashedSecret: splt[1],\n      secret: splt[2],\n    },\n  };\n};\n\nconst getRedeemedSecret = async (hashedSecret) => {\n  const data = await ConseilDataClient.executeEntityQuery(\n    config.tezos.conseilServer,\n    \"tezos\",\n    config.tezos.network,\n    \"operations\",\n    {\n      fields: [\"timestamp\", \"source\", \"parameters_entrypoints\", \"parameters\"],\n      predicates: [\n        {\n          field: \"kind\",\n          operation: \"eq\",\n          set: [\"transaction\"],\n          inverse: false,\n        },\n        {\n          field: \"timestamp\",\n          operation: \"after\",\n          set: [1599984675000],\n          inverse: false,\n        },\n        { field: \"status\", operation: \"eq\", set: [\"applied\"], inverse: false },\n        {\n          field: \"destination\",\n          operation: \"eq\",\n          set: [\"KT1T92mZgyZZtVqRG1XfyeqDsPbGe66tPFyV\"],\n          inverse: false,\n        },\n        {\n          field: \"parameters_entrypoints\",\n          operation: \"eq\",\n          set: [\"redeem\"],\n          inverse: false,\n        },\n      ],\n      orderBy: [{ field: \"timestamp\", direction: \"desc\" }],\n      aggregation: [],\n      limit: 1000,\n    }\n  );\n  for (let i = 0; i < data.length; ++i) {\n    const swp = parseValue(data[i]);\n    if (swp.parameters.hashedSecret === hashedSecret)\n      return swp.parameters.secret;\n  }\n  return \"\";\n};\n\nexport default getRedeemedSecret;\n","import initWait from \"../tezos/operations/initiateWait\";\nimport getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport addCounterParty from \"../tezos/operations/addCounterParty\";\nimport redeem from \"../ethereum/operations/redeem\";\nimport getRedeemedSecret from \"../tezos/operations/getRedeemedSwap\";\nimport refund from \"../tezos/operations/refund\";\n\nconst waitCompletion = (\n  hashedSecret,\n  ethStore,\n  tezStore,\n  refundTime,\n  update\n) => {\n  const id = setInterval(async () => {\n    const swp = await getSwapTez(hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp !== undefined) {\n      if (Math.trunc(Date.now() / 1000) >= refundTime) {\n        clearInterval(id);\n        await refund(tezStore, hashedSecret);\n        update(hashedSecret, 4);\n      }\n      return;\n    }\n    clearInterval(id);\n    console.log(\"\\nCOMPLETING SWAP\");\n    const secret = await getRedeemedSecret(hashedSecret);\n    await redeem(ethStore.web3, ethStore, hashedSecret, secret);\n    update(hashedSecret, 3);\n  }, 180000);\n};\n\nconst respondEth = async (amount, ethStore, tezStore, req_swap, update) => {\n  //create new swap response on ethereum\n  const refundTime = req_swap.refundTimestamp - 3600;\n  const status = await initWait(\n    tezStore,\n    ethStore.keyStore.address,\n    Math.round(amount * 1000000) + \"\",\n    req_swap.hashedSecret,\n    refundTime\n  );\n\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP GENERATED | HASH: \", req_swap.hashedSecret);\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(tezStore, req_swap.hashedSecret);\n      update(req_swap.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapEth(ethStore, req_swap.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp.participant !== ethStore.keyStore.address) return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(tezStore, swp.initiator_tez, req_swap.hashedSecret);\n    update(req_swap.hashedSecret, 2);\n    waitCompletion(\n      req_swap.hashedSecret,\n      ethStore,\n      tezStore,\n      refundTime,\n      update\n    );\n  }, 180000);\n\n  return {\n    hashedSecret: req_swap.hashedSecret,\n    value: amount + \" XTZ\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default respondEth;\n","const getRedeemedSecret = async (store, secretHash) => {\n  const data = await store.contract.getPastEvents(\"Redeemed\", {\n    filter: { _hashedSecret: secretHash },\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  return data[0].returnValues[\"_secret\"];\n};\n\nexport default getRedeemedSecret;\n","import initWait from \"../ethereum/operations/initiateWait\";\nimport getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport addCounterParty from \"../ethereum/operations/addCounterParty\";\nimport redeem from \"../tezos/operations/redeem\";\nimport getRedeemedSecret from \"../ethereum/operations/getRedeemedSwap\";\nimport refund from \"../ethereum/operations/refund\";\n\nconst waitCompletion = (\n  hashedSecret,\n  ethStore,\n  tezStore,\n  refundTime,\n  update\n) => {\n  const id = setInterval(async () => {\n    const swp = await getSwapEth(ethStore, hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp.initiator_tez !== \"\" && swp.refundTimestamp !== \"0\") {\n      if (Math.trunc(Date.now() / 1000) >= refundTime) {\n        clearInterval(id);\n        await refund(ethStore.web3, ethStore, hashedSecret);\n        update(hashedSecret, 4);\n      }\n      return;\n    }\n    clearInterval(id);\n    console.log(\"\\nCOMPLETING SWAP\");\n    const secret = await getRedeemedSecret(ethStore, hashedSecret);\n    await redeem(tezStore, hashedSecret, secret);\n    update(hashedSecret, 3);\n  }, 180000);\n};\n\nconst respondTezos = async (amount, ethStore, tezStore, req_swap, update) => {\n  //create new swap response on ethereum\n  const refundTime = req_swap.refundTimestamp - 3600;\n  const status = await initWait(\n    ethStore.web3,\n    ethStore,\n    req_swap.hashedSecret,\n    refundTime,\n    tezStore.keyStore.publicKeyHash,\n    amount.toString()\n  );\n\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP GENERATED | HASH: \", req_swap.hashedSecret);\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(ethStore.web3, ethStore, req_swap.hashedSecret);\n      update(req_swap.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapTez(req_swap.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp.participant !== tezStore.keyStore.publicKeyHash) return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(\n      ethStore.web3,\n      ethStore,\n      req_swap.hashedSecret,\n      swp.initiator_eth\n    );\n    update(req_swap.hashedSecret, 2);\n    waitCompletion(\n      req_swap.hashedSecret,\n      ethStore,\n      tezStore,\n      refundTime,\n      update\n    );\n  }, 180000);\n\n  return {\n    hashedSecret: req_swap.hashedSecret,\n    value: amount + \" ETH\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default respondTezos;\n","import Web3 from \"web3\";\nimport config from \"../../../globalConfig.json\";\n\nconst setEthAccount = (key) => {\n  const web3 = new Web3(new Web3.providers.HttpProvider(config.ethereum.RPC));\n  const keyStore = web3.eth.accounts.privateKeyToAccount(key);\n  keyStore.privateKey = keyStore.privateKey.substring(2);\n  const contract = new web3.eth.Contract(\n    config.ethereum.abi,\n    config.ethereum.contractAddr\n  );\n  return { web3, keyStore, contract };\n};\n\nexport default setEthAccount;\n","import { KeyStoreUtils, SoftSigner } from \"conseiljs-softsigner\";\nimport { TezosMessageUtils } from \"conseiljs\";\n\nconst setTezAccount = async (key, tezSetup) => {\n  const keyStore = await KeyStoreUtils.restoreIdentityFromSecretKey(key);\n  const signer = await SoftSigner.createSigner(\n    TezosMessageUtils.writeKeyWithHint(key, \"edsk\"),\n    -1\n  );\n  return { keyStore, signer };\n};\n\nexport default setTezAccount;\n","import React, { useRef, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport About from \"./components/about\";\nimport Header from \"./components/header\";\nimport Home from \"./components/home\";\nimport Loader from \"./components/loader\";\nimport Swap from \"./components/newSwap\";\nimport Ethereum from \"./components/newSwap/ethereum/index.jsx\";\nimport Tezos from \"./components/newSwap/tezos\";\nimport Setup from \"./components/setup\";\nimport requestEth from \"./library/common/request-eth\";\nimport requestTezos from \"./library/common/request-tezos\";\nimport respondEth from \"./library/common/respond-eth\";\nimport respondTezos from \"./library/common/respond-tezos\";\nimport setEthAccount from \"./library/ethereum/account/setAccount\";\nimport setTezAccount from \"./library/tezos/account/setAccount\";\n\nconst App = () => {\n  const [ethStore, ethSetup] = useState(undefined);\n  const [tezStore, tezSetup] = useState(undefined);\n  const [swaps, updateSwaps] = useState(undefined);\n  const [balance, balUpdate] = useState(undefined);\n  const [, updateState] = React.useState();\n\n  const swapRef = useRef();\n  swapRef.current = swaps;\n  const ethRef = useRef();\n  ethRef.current = ethStore;\n  const tezRef = useRef();\n  tezRef.current = tezStore;\n\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  const initialize = async (ethKey, tezKey) => {\n    try {\n      const eth = setEthAccount(ethKey);\n      const tez = await setTezAccount(tezKey);\n      ethSetup(eth);\n      tezSetup(tez);\n    } catch {\n      alert(\"Wrong keys\");\n    }\n  };\n\n  const update = (hash, state) => {\n    let newSwap = swapRef.current;\n    if (newSwap[hash] !== undefined) {\n      newSwap[hash].state = state;\n      updateSwaps(newSwap);\n      forceUpdate();\n    } else console.log(\"missing hash update request\");\n  };\n\n  const genSwap = async (type, value, req_swap = undefined) => {\n    let swap = {};\n    if (type === 2) {\n      if (req_swap === undefined) {\n        swap = await requestTezos(\n          value,\n          ethRef.current,\n          tezRef.current,\n          update\n        );\n      } else {\n        swap = await respondTezos(\n          value,\n          ethRef.current,\n          tezRef.current,\n          req_swap,\n          update\n        );\n      }\n    } else if (type === 1) {\n      if (req_swap === undefined) {\n        swap = await requestEth(value, ethRef.current, tezRef.current, update);\n      } else {\n        swap = await respondEth(\n          value,\n          ethRef.current,\n          tezRef.current,\n          req_swap,\n          update\n        );\n      }\n    }\n    if (swap === undefined) return false;\n    let newSwaps = swaps;\n    if (newSwaps === undefined) {\n      newSwaps = {};\n    }\n    newSwaps[swap.hashedSecret] = swap;\n    updateSwaps(newSwaps);\n    return true;\n  };\n\n  if (ethStore === undefined || tezStore === undefined)\n    return (\n      <div className=\"App\">\n        <Setup init={initialize} />\n      </div>\n    );\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header ethStore={ethStore} tezStore={tezStore} balUpdate={balUpdate} />\n        {balance === undefined && <Loader message=\"Loading Account\" />}\n        {balance !== undefined && (\n          <Switch>\n            <Route exact path=\"/\">\n              <Home swaps={swaps} />\n            </Route>\n            <Route exact path=\"/create/eth\">\n              <Ethereum\n                genSwap={genSwap}\n                selfAcc={tezStore.keyStore.publicKeyHash}\n                balance={balance.eth}\n              />\n            </Route>\n            <Route exact path=\"/create/xtz\">\n              <Tezos\n                genSwap={genSwap}\n                ethStore={ethStore}\n                balance={balance.tez}\n              />\n            </Route>\n            <Route exact path=\"/create\">\n              <Swap />\n            </Route>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        )}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import config from \"../../../globalConfig.json\";\nimport { Transaction } from \"ethereumjs-tx\";\n\nconst interact = async (\n  web3,\n  store,\n  data,\n  ether,\n  gas,\n  to = config.ethereum.contractAddr,\n  chain = config.ethereum.chain\n) => {\n  return new Promise((resolve) => {\n    try {\n      web3.eth.getBlock(\"latest\", false, (error, result) => {\n        var _gasLimit = result.gasLimit;\n        try {\n          web3.eth.getGasPrice((error, result) => {\n            var _gasPrice = result;\n            try {\n              const privateKey = Buffer.from(store.keyStore.privateKey, \"hex\");\n\n              var _hex_gasLimit = web3.utils.toHex(\n                (_gasLimit + 1000000).toString()\n              );\n              var _hex_gasPrice = web3.utils.toHex(_gasPrice.toString());\n              var _hex_Gas = web3.utils.toHex(gas);\n\n              web3.eth\n                .getTransactionCount(store.keyStore.address)\n                .then((nonce) => {\n                  var _hex_nonce = web3.utils.toHex(nonce);\n\n                  const rawTx = {\n                    nonce: _hex_nonce,\n                    from: store.keyStore.address,\n                    gasPrice: _hex_gasPrice,\n                    gasLimit: _hex_gasLimit,\n                    gas: _hex_Gas,\n                    value: web3.utils.toHex(web3.utils.toWei(ether, \"ether\")),\n                    data: data,\n                  };\n                  if (to !== \"\") rawTx[\"to\"] = to;\n                  const tx = new Transaction(rawTx, { chain: chain });\n                  tx.sign(privateKey);\n                  var serializedTx = \"0x\" + tx.serialize().toString(\"hex\");\n                  web3.eth\n                    .sendSignedTransaction(serializedTx.toString(\"hex\"))\n                    .on(\"transactionHash\", (transactionHash) => {\n                      console.log(\"ETH TX HASH : \", transactionHash);\n                    })\n                    .then((contract) => {\n                      if (contract.contractAddress != null)\n                        resolve(contract.contractAddress);\n                      resolve(true);\n                    })\n                    .catch((error) => {\n                      console.error(\"ETH TX ERROR : \", error);\n                      resolve(false);\n                    });\n                });\n            } catch (error) {\n              console.error(\"ETH TX ERROR : \", error);\n              resolve(false);\n            }\n          });\n        } catch (error) {\n          console.error(\"ETH TX ERROR : \", error);\n          resolve(false);\n        }\n      });\n    } catch (error) {\n      console.error(\"ETH TX ERROR : \", error);\n      resolve(false);\n    }\n  });\n};\n\nexport default interact;\n"],"sourceRoot":""}