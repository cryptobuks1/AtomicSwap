{"version":3,"sources":["library/tezos/operations/getSwap.js","components/setup/style.js","components/setup/index.jsx","library/ethereum/account/setAccount.js","library/tezos/account/setAccount.js","library/ethereum/account/getAccountBalance.js","library/tezos/account/getAccountBalance.js","components/header/style.js","components/header/index.jsx","components/home/style.js","components/home/index.jsx","library/common/getConversionRate.js","library/tezos/operations/getSwaps.js","components/newSwap/style.js","components/loader/style.js","components/loader/index.jsx","components/newSwap/ethereum/createSwap/index.jsx","components/newSwap/ethereum/getSwaps/index.jsx","components/newSwap/ethereum/index.jsx","components/newSwap/index.jsx","library/ethereum/operations/getSwaps.js","components/newSwap/tezos/createSwap/index.jsx","components/newSwap/tezos/getSwaps/index.jsx","components/newSwap/tezos/index.jsx","library/ethereum/operations/getSwap.js","library/tezos/operations/util/invokeContract.js","library/tezos/operations/initiateWait.js","library/common/createSecrets.js","library/tezos/operations/addCounterParty.js","library/ethereum/operations/redeem.js","library/tezos/operations/refund.js","library/common/request-tezos.js","library/ethereum/operations/initiateWait.js","library/ethereum/operations/addCounterParty.js","library/tezos/operations/redeem.js","library/ethereum/operations/getRedeemedSwap.js","library/ethereum/operations/refund.js","library/common/respond-tezos.js","library/common/request-eth.js","library/tezos/operations/getRedeemedSwap.js","library/common/respond-eth.js","App.js","serviceWorker.js","index.js","util/index.js","library/ethereum/operations/bc-intereraction.js"],"names":["getSwap","secretHash","a","substring","packedKey","TezosMessageUtils","encodeBigMapKey","Buffer","from","writePackedData","TezosNodeReader","getValueForBigMapKey","config","tezos","RPC","undefined","jsonData","hashedSecret","JSONPath","path","json","initiator","initiator_eth","participant","refundTimestamp","Number","Math","round","Date","getTime","state","value","useStyles","makeStyles","theme","container","width","form","display","flexDirection","margin","padding","border","borderRadius","input","fontSize","submit","color","fontWeight","backgroundColor","cursor","outline","intro","title","fontFamily","Setup","init","classes","className","onSubmit","e","preventDefault","target","eth","tez","type","placeholder","name","setEthAccount","key","web3","Web3","providers","HttpProvider","ethereum","keyStore","accounts","privateKeyToAccount","privateKey","contract","Contract","abi","contractAddr","setTezAccount","tezSetup","KeyStoreUtils","restoreIdentityFromSecretKey","SoftSigner","createSigner","writeKeyWithHint","signer","accountBalanceEth","address","getBalance","balance","accountBalanceTez","getSpendableBalanceForAccount","result","header","justifyContent","marginBottom","account","height","marginTop","button","lineHeight","nav","Header","ethStore","tezStore","balUpdate","useState","setBalance","history","useHistory","updateBalance","publicKeyHash","pow","useEffect","timer","setInterval","clearInterval","shorten","truncate","onClick","push","background","swaps","swap","Home","data","Object","keys","map","exp","refundTime","toLocaleString","1","2","3","4","SwapItem","getConvertionRate","tezosNode","chain_id","xtzPrice","ethPrice","parseValue","michelsonData","michelineData","TezosLanguageUtil","translateMichelsonToMicheline","JSON","parse","readAddress","getSwaps","ConseilDataClient","executeEntityQuery","conseilServer","network","fields","predicates","field","operation","ConseilOperator","EQ","set","inverse","ISNULL","orderBy","direction","ConseilSortDirection","DESC","aggregation","limit","forEach","select","selectButton","expectedValue","create","valueInput","marginRight","msg","swapScreen","swapList","overflowY","or","flexGrow","alignItems","newSwap","loader","Loader","message","CircularProgress","size","CreateSwap","genSwap","rate","setRate","setInput","getConversionRate","then","res","console","log","rt","generateSwap","alert","step","min","onInput","GetSwap","selfAcc","setSwaps","setLoader","fullLoader","setFullLoader","filterSwaps","swps","swp","trunc","now","displayValue","pay","length","Ethereum","props","Swap","store","methods","getAllSwaps","call","dispValue","Tezos","invokeContract","amtInMuTez","entry_point","parameters","extraGas","extraStorage","Promise","resolve","reject","TezosNodeWriter","testContractInvocationOperation","TezosParameterFormat","Michelson","gas","freight","storageCost","sendContractInvocationOperation","groupid","replace","TezosConseilClient","awaitOperationConfirmation","catch","err","status","initWait","ethAddress","amtMuTez","time","createSecrets","rand","crypto","randomBytes","hash","createHash","update","digest","secret","toString","addCounterParty","tezAccount","redeem","encodeABI","BCInteract","rc","refund","waitCompletion","tid","getSwapEth","requestTezos","amount","getSwapTez","stringify","initiator_tez","tezAcc","amtInEther","initiateWait","addCoutnerParty","ethAccount","getRedeemedSecret","getPastEvents","filter","_hashedSecret","fromBlock","toBlock","returnValues","id","respondTezos","req_swap","requestEth","splt","split","i","respondEth","App","ethSetup","updateSwaps","React","updateState","swapRef","useRef","current","ethRef","tezRef","forceUpdate","useCallback","initialize","ethKey","tezKey","newSwaps","basename","process","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","exports","first","last","str","number","digits","interact","ether","to","chain","getBlock","_gasLimit","gasLimit","getGasPrice","_gasPrice","_hex_gasLimit","utils","toHex","_hex_gasPrice","_hex_Gas","getTransactionCount","nonce","rawTx","gasPrice","toWei","tx","Transaction","sign","serializedTx","serialize","sendSignedTransaction","on","transactionHash","contractAddress"],"mappings":"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","file":"static/js/main.be62b293.chunk.js","sourcesContent":["import { TezosNodeReader, TezosMessageUtils } from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\nimport { JSONPath } from \"jsonpath-plus\";\n\nconst getSwap = async (secretHash) => {\n  secretHash = secretHash.substring(2);\n  const packedKey = TezosMessageUtils.encodeBigMapKey(\n    Buffer.from(TezosMessageUtils.writePackedData(secretHash, \"bytes\"), \"hex\")\n  );\n  const jsonData = await TezosNodeReader.getValueForBigMapKey(\n    config.tezos.RPC,\n    15534,\n    packedKey\n  );\n  if (jsonData === undefined) return jsonData;\n  return {\n    hashedSecret:\n      \"0x\" +\n      JSONPath({\n        path: \"$.args[0].args[0].bytes\",\n        json: jsonData,\n      })[0],\n    initiator: JSONPath({\n      path: \"$.args[0].args[1].args[0].string\",\n      json: jsonData,\n    })[0],\n    initiator_eth: JSONPath({\n      path: \"$.args[0].args[1].args[1].string\",\n      json: jsonData,\n    })[0],\n    participant: JSONPath({\n      path: \"$.args[1].args[0].args[0].string\",\n      json: jsonData,\n    })[0],\n    refundTimestamp: Number(\n      Math.round(\n        new Date(\n          JSONPath({\n            path: \"$.args[1].args[0].args[1].string\",\n            json: jsonData,\n          })[0]\n        ).getTime() / 1000\n      )\n    ),\n    state: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[0].int\", json: jsonData })[0]\n    ),\n    value: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[1].int\", json: jsonData })[0]\n    ),\n  };\n};\n\nexport default getSwap;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"31%\",\n    margin: \"0 auto\",\n    padding: \"2vw 3vw 1vw 3vw\",\n    border: \"0.3vw black solid\",\n    borderRadius: \"1vw\",\n  },\n  input: { margin: \"1vw\", fontSize: \"1.2vw\" },\n  submit: {\n    color: \"white\",\n    width: \"fit-content\",\n    margin: \"1vw auto\",\n    padding: \"0.5vw\",\n    fontWeight: \"bold\",\n    borderRadius: \"0.3vw\",\n    backgroundColor: \"black\",\n    cursor: \"pointer\",\n    fontSize: \"1.2vw\",\n    outline: \"none\",\n    border: \"0.2vw black solid\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  intro: {\n    margin: \"5vw\",\n    fontSize: \"1.5vw\",\n  },\n  title: {\n    fontFamily: \"'Pacifico', cursive\",\n    fontSize: \"5vw\",\n    margin: \"0\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./style\";\nconst Setup = ({ init }) => {\n  const setup = (e) => {\n    e.preventDefault();\n    if (e.target.eth.value !== \"\" && e.target.tez.value !== \"\")\n      init(e.target.eth.value, e.target.tez.value);\n  };\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.intro}>\n        <h1 className={classes.title}>Atomic Swap</h1>\n        <p>Cross-Chain Atomic Swaps for Ethereum and Tezos</p>\n        <p>\n          *Do not refresh or close the app during a running swap, your swaps\n          will be lost\n        </p>\n      </div>\n      <form className={classes.form} onSubmit={setup}>\n        <input\n          className={classes.input}\n          type=\"password\"\n          placeholder=\"ethereum private key [goerli-testnet]\"\n          name=\"eth\"\n        />\n        <input\n          className={classes.input}\n          type=\"password\"\n          placeholder=\"tezos private key [carthagenet]\"\n          name=\"tez\"\n        />\n        <input className={classes.submit} type=\"submit\" value=\"START\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Setup;\n","import Web3 from \"web3\";\nimport config from \"../../../globalConfig.json\";\n\nconst setEthAccount = (key) => {\n  const web3 = new Web3(new Web3.providers.HttpProvider(config.ethereum.RPC));\n  const keyStore = web3.eth.accounts.privateKeyToAccount(key);\n  keyStore.privateKey = keyStore.privateKey.substring(2);\n  const contract = new web3.eth.Contract(\n    config.ethereum.abi,\n    config.ethereum.contractAddr\n  );\n  return { web3, keyStore, contract };\n};\n\nexport default setEthAccount;\n","import { KeyStoreUtils, SoftSigner } from \"conseiljs-softsigner\";\nimport { TezosMessageUtils } from \"conseiljs\";\n\nconst setTezAccount = async (key, tezSetup) => {\n  const keyStore = await KeyStoreUtils.restoreIdentityFromSecretKey(key);\n  const signer = await SoftSigner.createSigner(\n    TezosMessageUtils.writeKeyWithHint(key, \"edsk\"),\n    -1\n  );\n  return { keyStore, signer };\n};\n\nexport default setTezAccount;\n","const accountBalanceEth = async (web3, address) => {\n  const balance = await web3.eth.getBalance(address); //Will give value in.\n  return balance;\n};\n\nexport default accountBalanceEth;\n","import { TezosNodeReader } from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\n\nconst accountBalanceTez = async (address) => {\n  const result = await TezosNodeReader.getSpendableBalanceForAccount(\n    config.tezos.RPC,\n    address\n  );\n  return result;\n};\n\nexport default accountBalanceTez;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    padding: \"1.5vw\",\n    fontSize: \"1.5vw\",\n    justifyContent: \"space-between\",\n    marginBottom: \"1vw\",\n  },\n  account: {\n    padding: \"0.6vw\",\n    border: \"0.2vw black solid\",\n    borderRadius: \"2vw\",\n    height: \"fit-content\",\n    width: \"28vw\",\n    marginTop: \"1vw\",\n  },\n  button: {\n    color: \"white\",\n    border: \"0.2vw black solid\",\n    cursor: \"pointer\",\n    margin: \"1.5vw 1vw\",\n    outline: \"none\",\n    padding: \"0.4vw 0.2vw\",\n    fontSize: \"1.2vw\",\n    fontWeight: \"bold\",\n    borderRadius: \"0.5vw\",\n    backgroundColor: \"black\",\n    width: \"10vw\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  title: {\n    fontFamily: \"'Pacifico', cursive\",\n    fontSize: \"5vw\",\n    margin: \"0\",\n    lineHeight: \"6vw\",\n  },\n  nav: {},\n}));\n\nexport default useStyles;\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport accountBalanceEth from \"../../library/ethereum/account/getAccountBalance\";\nimport accountBalanceTez from \"../../library/tezos/account/getAccountBalance\";\nimport useStyles from \"./style\";\nimport { useHistory } from \"react-router-dom\";\nimport { shorten, truncate } from \"../../util\";\n\nconst Header = ({ ethStore, tezStore, balUpdate }) => {\n  const [balance, setBalance] = useState({ eth: 0, tez: 0 });\n  const classes = useStyles();\n  const history = useHistory();\n  const updateBalance = async () => {\n    let eth = await accountBalanceEth(ethStore.web3, ethStore.keyStore.address);\n    let tez = await accountBalanceTez(tezStore.keyStore.publicKeyHash);\n    eth = eth / Math.pow(10, 18);\n    tez = tez / 1000000;\n    balUpdate({ eth, tez });\n    setBalance({ eth, tez });\n  };\n\n  useEffect(() => {\n    updateBalance();\n    const timer = setInterval(async () => {\n      await updateBalance();\n    }, 60000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [ethStore.keyStore.address, tezStore.keyStore.publicKeyHash]);\n\n  // const shorten = (first, last, str) => {\n  //   return str.substring(0, first) + \"...\" + str.substring(str.length - last);\n  // };\n\n  // const truncate = (number, digits) => {\n  //   return Math.trunc(number * Math.pow(10, digits)) / Math.pow(10, digits);\n  // };\n\n  return (\n    <div className={classes.header}>\n      <div className={classes.account}>\n        <p>Ethereum Addr.: {shorten(5, 5, ethStore.keyStore.address)}</p>\n        <p>Balance : {truncate(balance.eth, 4)} ETH</p>\n      </div>\n      <div className={classes.nav}>\n        <h1 className={classes.title}>Atomic Swap</h1>\n        <button className={classes.button} onClick={() => history.push(\"/\")}>\n          Home\n        </button>\n        <button\n          className={classes.button}\n          onClick={() => history.push(\"/about\")}\n        >\n          About\n        </button>\n        <button\n          className={classes.button}\n          onClick={() => history.push(\"/create\")}\n        >\n          New Swap\n        </button>\n      </div>\n      <div className={classes.account}>\n        <p>Tezos Addr.: {shorten(5, 5, tezStore.keyStore.publicKeyHash)}</p>\n        <p>Balance : {truncate(balance.tez, 4)} XTZ</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"white\",\n    cursor: \"pointer\",\n    padding: \"0.4vw\",\n    background: \"black\",\n    fontWeight: \"bold\",\n    borderRadius: \"0.4vw\",\n    fontSize: \"1.2vw\",\n    outline: \"none\",\n    border: \"0.2vw black solid\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  swaps: {\n    margin: \"1.4vw\",\n    \"& h3\": {\n      fontSize: \"2.1vw\",\n    },\n  },\n  swap: {\n    color: \"white\",\n    width: \"fit-content\",\n    border: \"0.2vw black solid\",\n    margin: \"3vw auto\",\n    padding: \"0.5vw 2vw\",\n    lineHeight: \"1.7vw\",\n    borderRadius: \"2vw\",\n    backgroundColor: \"black\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"./style\";\n\nconst Home = ({ swaps }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const SwapItem = (data) => {\n    const exp = new Date(data.refundTime * 1000);\n    const state = {\n      1: \"Running[1]\",\n      2: \"Running[2]\",\n      3: \"Completed\",\n      4: \"Refunded\",\n    };\n    return (\n      <div className={classes.swap} key={data.hashedSecret}>\n        <p>Hash : {data.hashedSecret}</p>\n        <p>Value : {data.value}</p>\n        <p>Expiry Time : {exp.toLocaleString()}</p>\n        <p>State : {state[data.state]}</p>\n      </div>\n    );\n  };\n  let data = (\n    <>\n      <p>No Swaps Created Yet!</p>\n      <button\n        className={classes.button}\n        onClick={() => history.push(\"/create\")}\n      >\n        Start New Swap\n      </button>\n    </>\n  );\n  if (swaps !== undefined)\n    data = Object.keys(swaps).map((key) => SwapItem(swaps[key]));\n  return (\n    <div>\n      <div className={classes.swaps}>\n        <h3>Your Swaps</h3>\n        {data}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { TezosNodeReader } from \"conseiljs\";\nimport config from \"../../globalConfig.json\";\nimport { JSONPath } from \"jsonpath-plus\";\n\nconst getConvertionRate = async () => {\n  let data = await TezosNodeReader.getValueForBigMapKey(\n    config.tezos.tezosNode,\n    14981,\n    \"exprukkbxD4rqiYFhFNSkLHfyEfbVEMirvDS9naHRjGKbzPsREJfmc\",\n    undefined,\n    config.tezos.chain_id\n  );\n  const xtzPrice = Number(\n    JSONPath({ path: \"$.args[0].args[0].int\", json: data })[0]\n  );\n  data = await TezosNodeReader.getValueForBigMapKey(\n    config.tezos.tezosNode,\n    14981,\n    \"exprv9NLX1skZHFM1i6eXc7eAazz25T1BVjkDzc47fWEEjn6y2Zsay\",\n    undefined,\n    config.tezos.chain_id\n  );\n  const ethPrice = Number(\n    JSONPath({ path: \"$.args[0].args[0].int\", json: data })[0]\n  );\n  return ethPrice / xtzPrice;\n};\n\nexport default getConvertionRate;\n","import {\n  ConseilDataClient,\n  ConseilOperator,\n  ConseilSortDirection,\n  TezosLanguageUtil,\n  TezosMessageUtils,\n} from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\nimport { JSONPath } from \"jsonpath-plus\";\n\nconst parseValue = (michelsonData) => {\n  const michelineData = TezosLanguageUtil.translateMichelsonToMicheline(\n    michelsonData\n  );\n  const jsonData = JSON.parse(michelineData);\n\n  return {\n    hashedSecret:\n      \"0x\" +\n      JSONPath({\n        path: \"$.args[0].args[0].bytes\",\n        json: jsonData,\n      })[0],\n    initiator: TezosMessageUtils.readAddress(\n      JSONPath({ path: \"$.args[0].args[1].args[0].bytes\", json: jsonData })[0]\n    ),\n    initiator_eth: JSONPath({\n      path: \"$.args[0].args[1].args[1].string\",\n      json: jsonData,\n    })[0],\n    participant: TezosMessageUtils.readAddress(\n      JSONPath({ path: \"$.args[1].args[0].args[0].bytes\", json: jsonData })[0]\n    ),\n    refundTimestamp: Number(\n      JSONPath({ path: \"$.args[1].args[0].args[1].int\", json: jsonData })[0]\n    ),\n    state: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[0].int\", json: jsonData })[0]\n    ),\n    value: Number(\n      JSONPath({ path: \"$.args[1].args[1].args[1].int\", json: jsonData })[0]\n    ),\n  };\n};\n\nconst getSwaps = async () => {\n  const data = await ConseilDataClient.executeEntityQuery(\n    config.tezos.conseilServer,\n    \"tezos\",\n    config.tezos.network,\n    \"big_map_contents\",\n    {\n      fields: [\"key\", \"key_hash\", \"operation_group_id\", \"big_map_id\", \"value\"],\n      predicates: [\n        {\n          field: \"big_map_id\",\n          operation: ConseilOperator.EQ,\n          set: [\"15534\"],\n          inverse: false,\n        },\n        {\n          field: \"value\",\n          operation: ConseilOperator.ISNULL,\n          set: [\"\"],\n          inverse: true,\n        },\n      ],\n      orderBy: [{ field: \"key\", direction: ConseilSortDirection.DESC }],\n      aggregation: [],\n      limit: 1000,\n    }\n  );\n  let swaps = [];\n  data.forEach((e) => {\n    if (e.value !== null) swaps.push(parseValue(e.value));\n  });\n  return swaps;\n};\n\nexport default getSwaps;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"90%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"center\",\n  },\n  selectButton: {\n    margin: \"1.5vw\",\n    padding: \"4vw\",\n    backgroundColor: \"black\",\n    borderRadius: \"0.6vw\",\n    color: \"white\",\n    fontSize: \"2.5vw\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\",\n    border: \"0.2vw solid black\",\n    width: \"100%\",\n    outline: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  expectedValue: {\n    display: \"block\",\n    margin: \"3vw\",\n  },\n  create: {\n    backgroundColor: \"black\",\n    borderRadius: \"0.5vw\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    padding: \"0.4vw 1vw\",\n    cursor: \"pointer\",\n    outline: \"none\",\n    border: \"0.2vw black solid\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  valueInput: {\n    marginRight: \"1vw\",\n    padding: \"0.2vw\",\n  },\n  swap: {\n    color: \"white\",\n    border: \"0.2vw black solid\",\n    cursor: \"pointer\",\n    margin: \"0 1.4vw 1.4vw 1.4vw\",\n    padding: \"0.5vw 2vw\",\n    lineHeight: \"1.4vw\",\n    borderRadius: \"1vw\",\n    backgroundColor: \"black\",\n    outline: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      color: \"black\",\n    },\n  },\n  msg: {\n    margin: \"1.4vw 1vw\",\n    fontSize: \"1.7vw\",\n  },\n  swapScreen: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100%\",\n  },\n  swapList: {\n    width: \"45%\",\n    height: \"100%\",\n  },\n  swaps: {\n    display: \"block\",\n    height: \"60vh\",\n    overflowY: \"auto\",\n  },\n  or: {\n    display: \"flex\",\n    flexGrow: \"1\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    fontSize: \"2.5vw\",\n    background: \"linear-gradient(#000, #000) no-repeat center/2px 100%\",\n    \"& p\": {\n      background: \"white\",\n    },\n  },\n  newSwap: {\n    width: \"45%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  loader: {\n    color: \"black\",\n    fontSize: \"2vw\",\n  },\n  msg: { margin: \"2vw\", fontSize: \"1.5vw\" },\n  container: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport useStyles from \"./style\";\n\nconst Loader = ({ message }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.loader} size={60} />\n      <p className={classes.msg}>{message}</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"../../style\";\n\nconst CreateSwap = ({ className, genSwap, loader, balance }) => {\n  const [rate, setRate] = useState(0);\n  const [input, setInput] = useState(0);\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      setRate(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      setRate(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const generateSwap = async (e) => {\n    e.preventDefault();\n    if (e.target.eth.value === \"\" || e.target.eth.value === 0) return;\n    loader(true);\n    const res = await genSwap(1, e.target.eth.value);\n    loader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <div className={className}>\n      <form onSubmit={generateSwap}>\n        <input\n          type=\"number\"\n          placeholder=\"Amount in ETH\"\n          name=\"eth\"\n          step=\".0001\"\n          min=\"0\"\n          onInput={(e) => setInput(e.target.value)}\n          className={classes.valueInput}\n        />\n        <input className={classes.create} type=\"submit\" value=\"CREATE\" />\n      </form>\n      <div>\n        <p className={classes.expectedValue}>\n          Expected XTZ Value : {input * rate} XTZ\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateSwap;\n","import React, { useEffect, useState } from \"react\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport getSwaps from \"../../../../library/tezos/operations/getSwaps\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"../../style\";\nimport Loader from \"../../../loader\";\nimport CreateSwap from \"../createSwap\";\nimport { shorten } from \"../../../../util\";\n\nconst GetSwap = ({ genSwap, selfAcc, balance }) => {\n  const [swaps, setSwaps] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [fullLoader, setFullLoader] = useState(false);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const filterSwaps = async (rt) => {\n    const data = await getSwaps();\n    let swps = [];\n    data.forEach((swp) => {\n      if (\n        swp.participant === swp.initiator &&\n        swp.initiator !== selfAcc &&\n        Math.trunc(Date.now() / 1000) < swp.refundTimestamp - 4200\n      )\n        swps.push({\n          ...swp,\n          displayValue: swp.value / 1000000,\n          pay: swp.value / (rt * 1000000),\n        });\n    });\n    setSwaps(swps);\n    setLoader(false);\n  };\n\n  const SwapItem = (data) => {\n    return (\n      <div\n        onClick={() => {\n          generateSwap(data.pay, data);\n        }}\n        key={data.hashedSecret}\n        className={classes.swap}\n      >\n        <p>Hash : {shorten(15, 15, data.hashedSecret)}</p>\n        <p>XTZ Value : {data.displayValue}</p>\n        <p>ETH to Pay : {data.pay}</p>\n      </div>\n    );\n  };\n\n  const generateSwap = async (value, data) => {\n    setFullLoader(true);\n    const res = await genSwap(2, value, data);\n    setFullLoader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      filterSwaps(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      filterSwaps(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  let data = \"No Swaps Found. Create One!\";\n  if (swaps.length > 0) data = swaps.map((swp) => SwapItem(swp));\n  if (fullLoader) return <Loader message=\"..Creating Your Swap..\" />;\n  return (\n    <div className={classes.swapScreen}>\n      <CreateSwap\n        className={classes.newSwap}\n        genSwap={genSwap}\n        balance={balance}\n        loader={setFullLoader}\n      />\n      <div className={classes.or}>\n        <p>Or</p>\n      </div>\n      <div className={classes.swapList}>\n        <h3 className={classes.msg}>Select From Available SWAPS</h3>\n        <div className={classes.swaps}>\n          {loader && <Loader message=\"..Loading Swaps..\" />}\n          {!loader && data}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GetSwap;\n","import React from \"react\";\nimport GetSwap from \"./getSwaps\";\n\nconst Ethereum = (props) => {\n  return <GetSwap {...props} />;\n};\n\nexport default Ethereum;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"./style\";\n\nconst Swap = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  return (\n    <div className={classes.select}>\n      <button\n        className={classes.selectButton}\n        onClick={() => history.push(\"/create/xtz\")}\n      >\n        XTZ &#8614; ETH\n      </button>\n      <button\n        className={classes.selectButton}\n        onClick={() => history.push(\"/create/eth\")}\n      >\n        ETH &#8614; XTZ\n      </button>\n    </div>\n  );\n};\n\nexport default Swap;\n","const getSwaps = async (store) => {\n  const swaps = await store.contract.methods.getAllSwaps().call();\n  return swaps;\n};\n\nexport default getSwaps;\n","import React, { useEffect, useState } from \"react\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"../../style\";\n\nconst CreateSwap = ({ className, genSwap, loader, balance }) => {\n  const [rate, setRate] = useState(0);\n  const [input, setInput] = useState(0);\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      setRate(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      setRate(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const generateSwap = async (e) => {\n    e.preventDefault();\n    if (e.target.tez.value === \"\" || e.target.tez.value === 0) return;\n    loader(true);\n    const res = await genSwap(2, e.target.tez.value);\n    loader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <div className={className}>\n      <form onSubmit={generateSwap}>\n        <input\n          type=\"number\"\n          placeholder=\"Amount in XTZ\"\n          name=\"tez\"\n          step=\".0001\"\n          min=\"0\"\n          onInput={(e) => setInput(e.target.value)}\n          className={classes.valueInput}\n        />\n        <input className={classes.create} type=\"submit\" value=\"CREATE\" />\n      </form>\n      <div>\n        <p className={classes.expectedValue}>\n          Expected ETH Value : {input / rate} ETH\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateSwap;\n","import React, { useEffect, useState } from \"react\";\nimport getConversionRate from \"../../../../library/common/getConversionRate\";\nimport getSwaps from \"../../../../library/ethereum/operations/getSwaps\";\nimport { useHistory } from \"react-router-dom\";\nimport useStyles from \"../../style\";\nimport CreateSwap from \"../createSwap\";\nimport Loader from \"../../../loader\";\nimport { shorten } from \"../../../../util\";\n\nconst GetSwap = ({ genSwap, ethStore, balance }) => {\n  const [swaps, setSwaps] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [fullLoader, setFullLoader] = useState(false);\n\n  const history = useHistory();\n  const classes = useStyles();\n  const filterSwaps = async (rt) => {\n    const data = await getSwaps(ethStore);\n    let swps = [];\n    data.forEach((swp) => {\n      if (\n        swp.participant === swp.initiator &&\n        swp.initiator !== ethStore.keyStore.address &&\n        Math.trunc(Date.now() / 1000) < swp.refundTimestamp - 4200\n      )\n        swps.push({\n          ...swp,\n          dispValue: swp.value / Math.pow(10, 18),\n          pay: (swp.value * rt) / Math.pow(10, 18),\n        });\n    });\n    setSwaps(swps);\n    setLoader(false);\n  };\n\n  const SwapItem = (data) => {\n    return (\n      <div\n        onClick={() => {\n          generateSwap(data.pay, data);\n        }}\n        key={data.hashedSecret}\n        className={classes.swap}\n      >\n        <p>Hash : {shorten(15, 15, data.hashedSecret)}</p>\n        <p>ETH Value : {data.dispValue}</p>\n        <p>XTZ to Pay : {data.pay}</p>\n      </div>\n    );\n  };\n\n  const generateSwap = async (value, data) => {\n    setFullLoader(true);\n    const res = await genSwap(1, value, data);\n    setFullLoader(false);\n    if (!res) {\n      alert(\"Error: Swap Couldn't be created\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n  useEffect(() => {\n    getConversionRate().then((res) => {\n      filterSwaps(res);\n    });\n    console.log(\"Rate Updated\");\n    const timer = setInterval(async () => {\n      const rt = await getConversionRate();\n      filterSwaps(rt);\n    }, 600000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  let data = \"No Swaps Found. Create One!\";\n  if (swaps.length > 0) data = swaps.map((swp) => SwapItem(swp));\n  if (fullLoader) return <Loader message=\"..Creating Your Swap..\" />;\n  return (\n    <div className={classes.swapScreen}>\n      <CreateSwap\n        className={classes.newSwap}\n        genSwap={genSwap}\n        balance={balance}\n        loader={setFullLoader}\n      />\n      <div className={classes.or}>\n        <p>Or</p>\n      </div>\n      <div className={classes.swapList}>\n        <h3 className={classes.msg}>Select From Available SWAPS</h3>\n        <div className={classes.swaps}>\n          {loader && <Loader message=\"..Loading Swaps..\" />}\n          {!loader && data}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GetSwap;\n","import React from \"react\";\nimport GetSwap from \"./getSwaps\";\n\nconst Tezos = (props) => {\n  return <GetSwap {...props} />;\n};\n\nexport default Tezos;\n","const getSwap = async (store, secretHash) => {\n  const swap = await store.contract.methods.swaps(secretHash).call();\n  return swap;\n};\n\nexport default getSwap;\n","import {\n  TezosConseilClient,\n  TezosNodeWriter,\n  TezosParameterFormat,\n} from \"conseiljs\";\nimport config from \"../../../../globalConfig.json\";\n\nconst invokeContract = (\n  store,\n  amtInMuTez,\n  entry_point,\n  parameters,\n  extraGas = 300,\n  extraStorage = 50\n) => {\n  return new Promise((resolve, reject) => {\n    const fee = 105000,\n      storage_limit = 6000,\n      gas_limit = 1000000;\n    TezosNodeWriter.testContractInvocationOperation(\n      config.tezos.RPC,\n      config.tezos.chain_id,\n      store.keyStore,\n      config.tezos.contractAddr,\n      amtInMuTez,\n      fee,\n      storage_limit,\n      gas_limit,\n      entry_point,\n      parameters,\n      TezosParameterFormat.Michelson\n    )\n      .then(({ gas, storageCost: freight }) => {\n        console.log(gas + extraGas, freight, ~~((gas + extraGas) / 10 + 300));\n        return TezosNodeWriter.sendContractInvocationOperation(\n          config.tezos.RPC,\n          store.signer,\n          store.keyStore,\n          config.tezos.contractAddr,\n          amtInMuTez,\n          200000,\n          freight + extraStorage,\n          gas + extraGas,\n          entry_point,\n          parameters,\n          TezosParameterFormat.Michelson\n        );\n      })\n      .then((result) => {\n        const groupid = result[\"operationGroupID\"]\n          .replace(/\"/g, \"\")\n          .replace(/\\n/, \"\"); // clean up RPC output\n        return TezosConseilClient.awaitOperationConfirmation(\n          config.tezos.conseilServer,\n          config.tezos.network,\n          groupid,\n          2\n        );\n      })\n      .then(resolve)\n      .catch((err) => {\n        console.log(err);\n        resolve({ status: \"error\" });\n      });\n  });\n};\n\nexport default invokeContract;\n","import invokeContract from \"./util/invokeContract\";\n\nconst initWait = async (store, ethAddress, amtMuTez, hashedSecret, time) => {\n  const res = await invokeContract(\n    store,\n    amtMuTez,\n    \"initiateWait\",\n    `(Pair ${hashedSecret} (Pair \"${time}\" \"${ethAddress}\"))`,\n    10000,\n    300\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default initWait;\n","import crypto from \"crypto\";\n\nconst createSecrets = () => {\n  const rand = crypto.randomBytes(32);\n  let hash = crypto.createHash(\"sha256\").update(rand).digest();\n  hash = crypto.createHash(\"sha256\").update(hash).digest(\"hex\");\n  return {\n    hashedSecret: \"0x\" + hash,\n    secret: \"0x\" + rand.toString(\"hex\"),\n  };\n};\n\nexport default createSecrets;\n","import invokeContract from \"./util/invokeContract\";\n\nconst addCounterParty = async (store, tezAccount, hashedSecret) => {\n  const res = await invokeContract(\n    store,\n    0,\n    \"addCounterParty\",\n    `(Pair ${hashedSecret} \"${tezAccount}\")`,\n    100000\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default addCounterParty;\n","import BCInteract from \"./bc-intereraction\";\n\nconst redeem = async (web3, store, secretHash, secret) => {\n  const data = await store.contract.methods\n    .redeem(secretHash, secret)\n    .encodeABI();\n  const rc = await BCInteract(web3, store, data, \"0\", \"1000000\");\n  return rc;\n};\n\nexport default redeem;\n","import invokeContract from \"./util/invokeContract\";\n\nconst refund = async (store, hashedSecret) => {\n  const res = await invokeContract(\n    store,\n    0,\n    \"refund\",\n    `${hashedSecret}`,\n    100000\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default refund;\n","import getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport initWait from \"../tezos/operations/initiateWait\";\nimport createSecrets from \"./createSecrets\";\nimport addCounterParty from \"../tezos/operations/addCounterParty\";\nimport redeem from \"../ethereum/operations/redeem\";\nimport refund from \"../tezos/operations/refund\";\n\nconst waitCompletion = (secret, tezStore, ethStore, refundTime, update) => {\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(tezStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapEth(ethStore, secret.hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp.participant !== ethStore.keyStore.address) return;\n    clearInterval(tid);\n    console.log(\"\\nCOMPLETING SWAP\");\n    await redeem(ethStore.web3, ethStore, secret.hashedSecret, secret.secret);\n    update(secret.hashedSecret, 3);\n  }, 180000);\n};\n\nconst requestTezos = async (amount, ethStore, tezStore, update) => {\n  // generate swap secret\n  const secret = createSecrets();\n  console.log(\"Your SWAP Secret (XTZ->ETH): \", secret);\n\n  // create new swap with refund time set to 2hrs\n  const refundTime = Math.trunc(Date.now() / 1000) + 7200;\n  const status = await initWait(\n    tezStore,\n    ethStore.keyStore.address,\n    amount * 1000000 + \"\",\n    secret.hashedSecret,\n    refundTime\n  );\n\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP Generated : \");\n  const swap = await getSwapTez(secret.hashedSecret);\n  console.log(JSON.stringify(swap));\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(tezStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapEth(ethStore, secret.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp.initiator_tez === \"\" && swp.refundTimestamp === \"0\") return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(tezStore, swp.initiator_tez, secret.hashedSecret);\n    update(secret.hashedSecret, 2);\n    waitCompletion(secret, tezStore, ethStore, refundTime, update);\n  }, 180000);\n\n  return {\n    hashedSecret: secret.hashedSecret,\n    value: amount + \" XTZ\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default requestTezos;\n","import BCInteract from \"./bc-intereraction\";\n\nconst initWait = async (\n  web3,\n  store,\n  secret,\n  refundTime,\n  tezAcc,\n  amtInEther\n) => {\n  const data = await store.contract.methods\n    .initiateWait(secret, tezAcc, refundTime)\n    .encodeABI();\n  const rc = await BCInteract(web3, store, data, amtInEther, \"1000000\");\n  return rc;\n};\n\nexport default initWait;\n","import BCInteract from \"./bc-intereraction\";\n\nconst addCoutnerParty = async (web3, store, secret, ethAccount) => {\n  const data = await store.contract.methods\n    .addCounterParty(secret, ethAccount)\n    .encodeABI();\n  const rc = await BCInteract(web3, store, data, \"0\", \"1000000\");\n  return rc;\n};\n\nexport default addCoutnerParty;\n","import invokeContract from \"./util/invokeContract\";\n\nconst redeem = async (store, hashedSecret, secret) => {\n  const res = await invokeContract(\n    store,\n    0,\n    \"redeem\",\n    `(Pair ${hashedSecret} ${secret})`,\n    100000,\n    300\n  );\n  if (res.status !== \"applied\") {\n    return false;\n  }\n  return true;\n};\n\nexport default redeem;\n","const getRedeemedSecret = async (store, secretHash) => {\n  const data = await store.contract.getPastEvents(\"Redeemed\", {\n    filter: { _hashedSecret: secretHash },\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  return data[0].returnValues[\"_secret\"];\n};\n\nexport default getRedeemedSecret;\n","import BCInteract from \"./bc-intereraction\";\n\nconst refund = async (web3, store, secret) => {\n  const data = await store.contract.methods.refund(secret).encodeABI();\n  const rc = await BCInteract(web3, store, data, \"0\", \"1000000\");\n  return rc;\n};\n\nexport default refund;\n","import initWait from \"../ethereum/operations/initiateWait\";\nimport getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport addCounterParty from \"../ethereum/operations/addCounterParty\";\nimport redeem from \"../tezos/operations/redeem\";\nimport getRedeemedSecret from \"../ethereum/operations/getRedeemedSwap\";\nimport refund from \"../ethereum/operations/refund\";\n\nconst waitCompletion = (\n  hashedSecret,\n  ethStore,\n  tezStore,\n  refundTime,\n  update\n) => {\n  const id = setInterval(async () => {\n    const swp = await getSwapEth(ethStore, hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp.initiator_tez !== \"\" && swp.refundTimestamp !== \"0\") {\n      if (Math.trunc(Date.now() / 1000) >= refundTime) {\n        clearInterval(id);\n        await refund(ethStore.web3, ethStore, hashedSecret);\n        update(hashedSecret, 4);\n      }\n      return;\n    }\n    clearInterval(id);\n    console.log(\"\\nCOMPLETING SWAP\");\n    const secret = await getRedeemedSecret(ethStore, hashedSecret);\n    await redeem(tezStore, hashedSecret, secret);\n    update(hashedSecret, 3);\n  }, 180000);\n};\n\nconst respondTezos = async (amount, ethStore, tezStore, req_swap, update) => {\n  //create new swap response on ethereum\n  const refundTime = req_swap.refundTimestamp - 3600;\n  const status = await initWait(\n    ethStore.web3,\n    ethStore,\n    req_swap.hashedSecret,\n    refundTime,\n    tezStore.keyStore.publicKeyHash,\n    amount.toString()\n  );\n\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP GENERATED | HASH: \", req_swap.hashedSecret);\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(ethStore.web3, ethStore, req_swap.hashedSecret);\n      update(req_swap.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapTez(req_swap.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp.participant !== tezStore.keyStore.publicKeyHash) return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(\n      ethStore.web3,\n      ethStore,\n      req_swap.hashedSecret,\n      swp.initiator_eth\n    );\n    update(req_swap.hashedSecret, 2);\n    waitCompletion(\n      req_swap.hashedSecret,\n      ethStore,\n      tezStore,\n      refundTime,\n      update\n    );\n  }, 180000);\n\n  return {\n    hashedSecret: req_swap.hashedSecret,\n    value: amount + \" ETH\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default respondTezos;\n","import getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport initWait from \"../ethereum/operations/initiateWait\";\nimport createSecrets from \"./createSecrets\";\nimport addCounterParty from \"../ethereum/operations/addCounterParty\";\nimport redeem from \"../tezos/operations/redeem\";\nimport refund from \"../ethereum/operations/refund\";\n\nconst waitCompletion = (secret, tezStore, ethStore, refundTime, update) => {\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(ethStore.web3, ethStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapTez(secret.hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp.participant !== tezStore.keyStore.publicKeyHash) return;\n    clearInterval(tid);\n    console.log(\"\\nCOMPLETING SWAP\");\n    await redeem(tezStore, secret.hashedSecret, secret.secret);\n    update(secret.hashedSecret, 3);\n  }, 180000);\n};\n\nconst requestEth = async (amount, ethStore, tezStore, update) => {\n  // generate swap secret\n  const secret = createSecrets();\n  console.log(\"Your SWAP Secret (XTZ->ETH): \", secret);\n\n  // create new swap with refund time set to 2hrs\n  const refundTime = Math.trunc(Date.now() / 1000) + 7200;\n  const status = await initWait(\n    ethStore.web3,\n    ethStore,\n    secret.hashedSecret,\n    refundTime,\n    tezStore.keyStore.publicKeyHash,\n    amount + \"\"\n  );\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP Generated : \");\n  const swap = await getSwapEth(ethStore, secret.hashedSecret);\n  console.log(JSON.stringify(swap));\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(ethStore.web3, ethStore, secret.hashedSecret);\n      update(secret.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapTez(secret.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp === undefined) return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(\n      ethStore.web3,\n      ethStore,\n      secret.hashedSecret,\n      swp.initiator_eth\n    );\n    update(secret.hashedSecret, 2);\n    waitCompletion(secret, tezStore, ethStore, refundTime, update);\n  }, 180000);\n\n  return {\n    hashedSecret: secret.hashedSecret,\n    value: amount + \" ETH\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default requestEth;\n","import { ConseilDataClient } from \"conseiljs\";\nimport config from \"../../../globalConfig.json\";\n\nconst parseValue = (e) => {\n  const splt = e.parameters.split(\" \");\n  return {\n    ...e,\n    parameters: {\n      hashedSecret: splt[1],\n      secret: splt[2],\n    },\n  };\n};\n\nconst getRedeemedSecret = async (hashedSecret) => {\n  const data = await ConseilDataClient.executeEntityQuery(\n    config.tezos.conseilServer,\n    \"tezos\",\n    config.tezos.network,\n    \"operations\",\n    {\n      fields: [\"timestamp\", \"source\", \"parameters_entrypoints\", \"parameters\"],\n      predicates: [\n        {\n          field: \"kind\",\n          operation: \"eq\",\n          set: [\"transaction\"],\n          inverse: false,\n        },\n        {\n          field: \"timestamp\",\n          operation: \"after\",\n          set: [1599984675000],\n          inverse: false,\n        },\n        { field: \"status\", operation: \"eq\", set: [\"applied\"], inverse: false },\n        {\n          field: \"destination\",\n          operation: \"eq\",\n          set: [\"KT1T92mZgyZZtVqRG1XfyeqDsPbGe66tPFyV\"],\n          inverse: false,\n        },\n        {\n          field: \"parameters_entrypoints\",\n          operation: \"eq\",\n          set: [\"redeem\"],\n          inverse: false,\n        },\n      ],\n      orderBy: [{ field: \"timestamp\", direction: \"desc\" }],\n      aggregation: [],\n      limit: 1000,\n    }\n  );\n  for (let i = 0; i < data.length; ++i) {\n    const swp = parseValue(data[i]);\n    if (swp.parameters.hashedSecret === hashedSecret)\n      return swp.parameters.secret;\n  }\n  return \"\";\n};\n\nexport default getRedeemedSecret;\n","import initWait from \"../tezos/operations/initiateWait\";\nimport getSwapTez from \"../tezos/operations/getSwap\";\nimport getSwapEth from \"../ethereum/operations/getSwap\";\nimport addCounterParty from \"../tezos/operations/addCounterParty\";\nimport redeem from \"../ethereum/operations/redeem\";\nimport getRedeemedSecret from \"../tezos/operations/getRedeemedSwap\";\nimport refund from \"../tezos/operations/refund\";\n\nconst waitCompletion = (\n  hashedSecret,\n  ethStore,\n  tezStore,\n  refundTime,\n  update\n) => {\n  const id = setInterval(async () => {\n    const swp = await getSwapTez(hashedSecret);\n    console.log(\"WAITING TO COMPLETE SWAP\");\n    if (swp !== undefined) {\n      if (Math.trunc(Date.now() / 1000) >= refundTime) {\n        clearInterval(id);\n        await refund(tezStore, hashedSecret);\n        update(hashedSecret, 4);\n      }\n      return;\n    }\n    clearInterval(id);\n    console.log(\"\\nCOMPLETING SWAP\");\n    const secret = await getRedeemedSecret(hashedSecret);\n    await redeem(ethStore.web3, ethStore, hashedSecret, secret);\n    update(hashedSecret, 3);\n  }, 180000);\n};\n\nconst respondEth = async (amount, ethStore, tezStore, req_swap, update) => {\n  //create new swap response on ethereum\n  const refundTime = req_swap.refundTimestamp - 3600;\n  const status = await initWait(\n    tezStore,\n    ethStore.keyStore.address,\n    Math.round(amount * 1000000) + \"\",\n    req_swap.hashedSecret,\n    refundTime\n  );\n\n  if (!status) return undefined;\n\n  console.log(\"\\nSWAP GENERATED | HASH: \", req_swap.hashedSecret);\n\n  // watch swap response\n  const tid = setInterval(async () => {\n    if (Math.trunc(Date.now() / 1000) >= refundTime) {\n      clearInterval(tid);\n      await refund(tezStore, req_swap.hashedSecret);\n      update(req_swap.hashedSecret, 4);\n      return;\n    }\n    const swp = await getSwapEth(ethStore, req_swap.hashedSecret);\n    console.log(\"CHECKING FOR SWAP RESPONSE\");\n    if (swp.participant !== ethStore.keyStore.address) return;\n    clearInterval(tid);\n    console.log(\"\\nA SWAP RESPONSE FOUND : \\n\", swp);\n    await addCounterParty(tezStore, swp.initiator_tez, req_swap.hashedSecret);\n    update(req_swap.hashedSecret, 2);\n    waitCompletion(\n      req_swap.hashedSecret,\n      ethStore,\n      tezStore,\n      refundTime,\n      update\n    );\n  }, 180000);\n\n  return {\n    hashedSecret: req_swap.hashedSecret,\n    value: amount + \" XTZ\",\n    refundTime,\n    state: 1,\n  };\n};\n\nexport default respondEth;\n","import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Setup from \"./components/setup\";\nimport setEthAccount from \"./library/ethereum/account/setAccount\";\nimport setTezAccount from \"./library/tezos/account/setAccount\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/header\";\nimport Home from \"./components/home\";\nimport Ethereum from \"./components/newSwap/ethereum/index.jsx\";\nimport Swap from \"./components/newSwap\";\nimport Tezos from \"./components/newSwap/tezos\";\nimport requestTezos from \"./library/common/request-tezos\";\nimport respondTezos from \"./library/common/respond-tezos\";\nimport requestEth from \"./library/common/request-eth\";\nimport respondEth from \"./library/common/respond-eth\";\nimport Loader from \"./components/loader\";\n\nconst App = () => {\n  const [ethStore, ethSetup] = useState(undefined);\n  const [tezStore, tezSetup] = useState(undefined);\n  const [swaps, updateSwaps] = useState(undefined);\n  const [balance, balUpdate] = useState(undefined);\n  const [, updateState] = React.useState();\n\n  const swapRef = useRef();\n  swapRef.current = swaps;\n  const ethRef = useRef();\n  ethRef.current = ethStore;\n  const tezRef = useRef();\n  tezRef.current = tezStore;\n\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  const initialize = async (ethKey, tezKey) => {\n    try {\n      const eth = setEthAccount(ethKey);\n      const tez = await setTezAccount(tezKey);\n      ethSetup(eth);\n      tezSetup(tez);\n    } catch {\n      alert(\"Wrong keys\");\n    }\n  };\n\n  const update = (hash, state) => {\n    let newSwap = swapRef.current;\n    if (newSwap[hash] !== undefined) {\n      newSwap[hash].state = state;\n      updateSwaps(newSwap);\n      forceUpdate();\n    } else console.log(\"missing hash update request\");\n  };\n\n  const genSwap = async (type, value, req_swap = undefined) => {\n    let swap = {};\n    if (type === 2) {\n      if (req_swap === undefined) {\n        swap = await requestTezos(\n          value,\n          ethRef.current,\n          tezRef.current,\n          update\n        );\n      } else {\n        swap = await respondTezos(\n          value,\n          ethRef.current,\n          tezRef.current,\n          req_swap,\n          update\n        );\n      }\n    } else if (type === 1) {\n      if (req_swap === undefined) {\n        swap = await requestEth(value, ethRef.current, tezRef.current, update);\n      } else {\n        swap = await respondEth(\n          value,\n          ethRef.current,\n          tezRef.current,\n          req_swap,\n          update\n        );\n      }\n    }\n    if (swap === undefined) return false;\n    let newSwaps = swaps;\n    if (newSwaps === undefined) {\n      newSwaps = {};\n    }\n    newSwaps[swap.hashedSecret] = swap;\n    updateSwaps(newSwaps);\n    return true;\n  };\n\n  if (ethStore === undefined || tezStore === undefined)\n    return (\n      <div className=\"App\">\n        <Setup init={initialize} />\n      </div>\n    );\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header ethStore={ethStore} tezStore={tezStore} balUpdate={balUpdate} />\n        {balance === undefined && <Loader message=\"Loading Account\" />}\n        {balance !== undefined && (\n          <Switch>\n            <Route exact path=\"/\">\n              <Home swaps={swaps} />\n            </Route>\n            <Route exact path=\"/create/eth\">\n              <Ethereum\n                genSwap={genSwap}\n                selfAcc={tezStore.keyStore.publicKeyHash}\n                balance={balance.eth}\n              />\n            </Route>\n            <Route exact path=\"/create/xtz\">\n              <Tezos\n                genSwap={genSwap}\n                ethStore={ethStore}\n                balance={balance.tez}\n              />\n            </Route>\n            <Route exact path=\"/create\">\n              <Swap />\n            </Route>\n          </Switch>\n        )}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.shorten = (first, last, str) => {\n  return str.substring(0, first) + \"...\" + str.substring(str.length - last);\n};\n\nexports.truncate = (number, digits) => {\n  return Math.trunc(number * Math.pow(10, digits)) / Math.pow(10, digits);\n};\n","import config from \"../../../globalConfig.json\";\nimport { Transaction } from \"ethereumjs-tx\";\n\nconst interact = async (\n  web3,\n  store,\n  data,\n  ether,\n  gas,\n  to = config.ethereum.contractAddr,\n  chain = config.ethereum.chain\n) => {\n  return new Promise((resolve) => {\n    try {\n      web3.eth.getBlock(\"latest\", false, (error, result) => {\n        var _gasLimit = result.gasLimit;\n        try {\n          web3.eth.getGasPrice((error, result) => {\n            var _gasPrice = result;\n            try {\n              const privateKey = Buffer.from(store.keyStore.privateKey, \"hex\");\n\n              var _hex_gasLimit = web3.utils.toHex(\n                (_gasLimit + 1000000).toString()\n              );\n              var _hex_gasPrice = web3.utils.toHex(_gasPrice.toString());\n              var _hex_Gas = web3.utils.toHex(gas);\n\n              web3.eth\n                .getTransactionCount(store.keyStore.address)\n                .then((nonce) => {\n                  var _hex_nonce = web3.utils.toHex(nonce);\n\n                  const rawTx = {\n                    nonce: _hex_nonce,\n                    from: store.keyStore.address,\n                    gasPrice: _hex_gasPrice,\n                    gasLimit: _hex_gasLimit,\n                    gas: _hex_Gas,\n                    value: web3.utils.toHex(web3.utils.toWei(ether, \"ether\")),\n                    data: data,\n                  };\n                  if (to !== \"\") rawTx[\"to\"] = to;\n                  const tx = new Transaction(rawTx, { chain: chain });\n                  tx.sign(privateKey);\n                  var serializedTx = \"0x\" + tx.serialize().toString(\"hex\");\n                  web3.eth\n                    .sendSignedTransaction(serializedTx.toString(\"hex\"))\n                    .on(\"transactionHash\", (transactionHash) => {\n                      console.log(\"ETH TX HASH : \", transactionHash);\n                    })\n                    .then((contract) => {\n                      if (contract.contractAddress != null)\n                        resolve(contract.contractAddress);\n                      resolve(true);\n                    })\n                    .catch((error) => {\n                      console.error(\"ETH TX ERROR : \", error);\n                      resolve(false);\n                    });\n                });\n            } catch (error) {\n              console.error(\"ETH TX ERROR : \", error);\n              resolve(false);\n            }\n          });\n        } catch (error) {\n          console.error(\"ETH TX ERROR : \", error);\n          resolve(false);\n        }\n      });\n    } catch (error) {\n      console.error(\"ETH TX ERROR : \", error);\n      resolve(false);\n    }\n  });\n};\n\nexport default interact;\n"],"sourceRoot":""}